<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-02-11T02:45:21+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Seil Park</title><subtitle></subtitle><entry><title type="html">전자기학 (1)</title><link href="http://localhost:4000/electromagnetics/2023/10/24/%EC%A0%84%EC%9E%90%EA%B8%B0%ED%95%99-1.html" rel="alternate" type="text/html" title="전자기학 (1)" /><published>2023-10-24T19:31:29+09:00</published><updated>2023-10-24T19:31:29+09:00</updated><id>http://localhost:4000/electromagnetics/2023/10/24/%EC%A0%84%EC%9E%90%EA%B8%B0%ED%95%99%20-%201</id><content type="html" xml:base="http://localhost:4000/electromagnetics/2023/10/24/%EC%A0%84%EC%9E%90%EA%B8%B0%ED%95%99-1.html"><![CDATA[<p>고급마이크로파공학 내용 정리<br />
<br />
우리 교재는 Harrington의 ‘Time-Harmonic Electromagnetic Fields’다.<br />
60년정도 된 책인데, 오타가 없는 대단한 책이다. 그래서 버전도 1개뿐이다.<br />
전기전자공학과 대학원은 이 책을 많이 쓰고, 물리학과 대학원은 Jackson의 ‘Classical Electrodynamics’를 많이 쓴다.<br />
우리 책은 mks 단위계, Jackson 책은 cgs단위계를 사용한다.<br />
<br />
유럽은 Linguistic notation : Curl \(\bar{E}\)<br />
미국은 Gibbs notation : \(\triangledown  \times \bar{E}\)<br />
<br />
이 과목은 고급마이크로파공학 보다는 고급전자장론, 또는 고급전자기학 정도가 어울리는 과목이다.<br />
고급마이크로파공학이란 이름은 30년전에 지어진 이름이라 그냥 쓰는거다.<br />
<br />
Electromagnetics Theory.<br />
현대물리, 양자역학이 들어오면서 고전역학은 상당 부분 수정되어야 했다.<br />
그런데 전자기학은 전혀 바뀌지 않았다! 그만큼 수학적으로 정교한 이론이다.<br />
<br />
Microscopic Theory: 원자, 분자 한개의 특성. 슈뢰딩거 방정식<br />
Macroscopic Theory: 통계적인 특성. 맥스웰 방정식. 원자,분자 단위에서는 적용 불가<br />
<br />
원자, 분자가 아보가드로 수 수준으로 많은 경우부터 Macroscopic model을 사용할 수 있다.<br />
<br />
우리가 배울 내용은 Macroscopic theory다.<br />
<br />
Field Quantities:<br />
\(\bar{E}\) : Electric field intensity [V/m]<br />
\(\bar{H}\) : Magnetic field intensity<br />
\(\bar{D}\) : Electric flux density<br />
\(\bar{B}\) : Magnetic flux density<br />
\(\bar{J}\) : Electric current density<br />
\(\rho\) : Electric charge density<br />
<br />
\(\bar{E}\)는 Electric field, \(\bar{H}\) : Magnetic field라고 자주 부르지만, 엄밀한 명칭은 intensity까지 붙여줘야 한다.<br />
이 물리량들은 모두 시간과 공간에 대한 함수다. \(f(x,y,z,t)\)<br />
<br />
Faraday’s Law:<br />
<br />
어떤 폐곡선(Closed Contour) c가 있다고 해보자. 이 폐곡선에 대해:<br />
\(\oint_{c}^{}\bar{E}\cdot d\bar{l}=-\dfrac{d}{dt}\iint_{S}^{}\bar{B}\cdot \hat{n}dS\)<br />
라는게 Faraday’s Law다.<br /></p>

<p>이때 S는 평면일 필요는 없고, Boundary가 폐곡선 c인 임의의 곡면이면 된다.<br />
<br />
\(\oint_{c}^{}\bar{E}\cdot d\bar{l}\)을 계산할 때는?<br />
\(\bar{E}\)랑 각 \(d\bar{l}\)들 dot product해서 더한게 \(\oint_{c}^{}\bar{E}\cdot d\bar{l}\)다.<br />
\(\bar{E}\)의 단위가 [V/m], \(d\bar{l}\)의 단위가 [m]이라 \(\oint_{c}^{}\bar{E}\cdot d\bar{l}\)의 단위는 [V]다.<br />
<br />
Maxwell-Ampère’s Law:<br />
\(\oint_{c}^{}\bar{H}\cdot d\bar{l}=\iint_{S}^{}\bar{J}\cdot \hat{n}dS\) : Ampère’s Law<br />
\(\oint_{c}^{}\bar{H}\cdot d\bar{l}=\iint_{S}^{}\bar{J}\cdot \hat{n}dS+\dfrac{\partial }{\partial t}\iint_{S}^{}\bar{D}\cdot \hat{n}dS\) : Maxwell-Ampère’s Law<br />
<br />
우변 두번째 항이 중요하다. 이게 없으면 Ampère’s Law, 있으면 Maxwell-Ampère’s Law다.<br />
이 항이 표현하는건 ‘displacement current’다. 왜 displacement냐면, 이 곳이 아닌 다른 곳에서 전류가 생긴다는 뜻으로 생각하면 된다.<br />
근데 뭐.. 그렇게 알맞아보이는 이름은 아니긴 하다.<br />
<br />
이 법칙은 고압선 전류 측정에 활용될 수 있다.<br />
고압선 전류를 재겠다고 전선 끊어서 전류계를 넣어볼 수는 없기 때문에, 주변 자기장의 크기를 잰다. 그걸 \(2\pi r\)배 하면 전류다.<br />
<br />
이 법칙이 나온게 1860년대다. 맥스웰 말을 처음부터 모두가 믿었던 것은 아니다.<br />
일부 사람들이 믿기 시작했는데, 그 사람들은 Maxwellian이라 불렸다.<br />
그 중 한명이 독일 사람인 Hertz였고, 이 사람이 1880년대에 이게 사실이라는 것을 증명했다.<br />
그래서, 저 멀리까지 전류가 흐르고 있지 않더라도, 여기에서 뭔가를 바꾸면 저 먼 곳의 자기장을 바꿀 수 있다는게 증명됐다.<br />
<br />
Marconi라는 이탈리아 사람은 이걸 1900년대에 상업화했다.<br />
1800년대 후반, 1900년대 초에는 유럽 사람들이 미국으로 많이들 이주했다.<br />
당시 유럽이 살기 어려웠기 때문이다. 그러니까 사회주의가 유행했지.<br />
드보르작의 ‘신세계 교향곡’도 미국 와보니 신세계라서 나온 곡이다.<br />
<br />
근데, 미국으로 넘어와도 유럽이랑 연락이 되어야 할 것 아닌가?<br />
그래서 1850년대에 대서양에 5천km 케이블을 깔아놓고, 이걸 통해 모스부호를 주고받았다. 당연히 엄청나게 비쌌다고 한다.<br />
이때, 마르코니가 무선통신을 구현해서 trans-Atlantic 통신을 실현했던 것이다.<br />
특히, 이 시기는 전세계적으로 해군이 중요했던 시절이라 진짜 돈 많이 벌었다. 배에서도 통신이 되니까.<br />
참고로 맥스웰, 헤르츠 모두 50살 전에 죽었지만 마르코니는 63살까지 살았다.<br />
<br />
Charge Conservation Equation / Continuity Equation:<br />
\(\oiint \bar{J}\cdot d\bar{S}=\dfrac{\mathrm{d} }{\mathrm{d} t}\iiint_{V}\rho dV\)<br />
여기서 확인할 수 있는 점은, charge가 안 움직이면 전류가 생기지 않는다는 것이다.<br />
<br />
Stokes’ Theorem:<br />
\(\oint_{c}\bar{F}\cdot d\bar{l}=\iint_{S}\triangledown \times \bar{F}\cdot \hat{n}dS\)<br />
<br />
Divergence Theorem:<br />
\(\oiint_{S}\bar{F}\cdot \hat{n}dS=\iiint_{V}\triangledown \cdot \bar{F}dV\)<br />
<br />
Div, Curl을 Gibbs notation으로 적을 때는 각각 \(\triangledown \cdot\), \(\triangledown \times\)라고 적는다.<br />
이때, \(\triangledown \times \bar{F}\)를 \(\triangledown\)와 \(\bar{F}\)를 cross product하는 거라고 해석하는건 일반적으로 틀린 해석이다.<br />
그런 해석은 Cartesian coordinates에서만 맞는 이야기다. 일반적으로, \(\triangledown \cdot\)와 \(\triangledown \times\)는 그냥 그 자체로 하나로 봐야 한다.<br />
<br />
Van Bladel의 책을 보면 온갖 Variation들을 다 정리해놨다고 하는데, 무슨 variation인지는 확인해봐야 할 듯 하다.<br />
<br />
Maxwell’s Equation in differential form:<br />
Faraday’s Law를 가져온다.<br />
\(\oint_{c}\bar{E}\cdot d\bar{l}=-\dfrac{d}{dt}\iint_{S}\bar{B}\cdot \hat{n}dS\)<br />
여기서, Surface S가 시간에 따라 바뀌지 않는다면 \(-\dfrac{d}{dt}\iint_{S}\bar{B}\cdot \hat{n}dS =-\iint_{S}\dfrac{\partial \bar{B}}{\partial t}\cdot \hat{n}dS\)라고 적을 수 있다.<br />
그리고 \(\oint_{c}\bar{E}\cdot d\bar{l}\)에 Stokes’ Theorem을 적용하면 \(\oint_{c}\bar{E}\cdot d\bar{l}=\iint_{S}\triangledown \times \bar{E}\cdot \hat{n}dS\)가 된다.<br />
따라서, \(-\iint_{S}\dfrac{\partial \bar{B}}{\partial t}\cdot \hat{n}dS=\iint_{S}\triangledown \times \bar{E}\cdot \hat{n}dS\),<br />
정리하면 \(\iint_{S}\left (\triangledown \times \bar{E}+\dfrac{\partial \bar{B}}{\partial t}  \right )\cdot \hat{n}dS=0\)<br />
<br />
이때, S는 c를 Boundary로 하는 임의의 surface다. 즉 surface를 내 맘대로 잡아도 \(\iint_{S}\left (\triangledown \times \bar{E}+\dfrac{\partial \bar{B}}{\partial t}  \right )\cdot \hat{n}dS\)는 0이 된다는 이야기다.<br />
<br />
적분 범위를 아무렇게나 잡아도 적분 값이 0이라면, 피적분함수가 0이어야 할 것이다.<br />
따라서 \(\triangledown \times \bar{E}+\dfrac{\partial \bar{B}}{\partial t}=0\).<br />
<br />
비슷한 방식으로, Maxwell-Ampère’s Law : \(\oint_{c}^{}\bar{H}\cdot d\bar{l}=\iint_{S}^{}\bar{J}\cdot \hat{n}dS+\dfrac{\partial }{\partial t}\iint_{S}^{}\bar{D}\cdot \hat{n}dS\)를 정리해서<br />
\(\triangledown \times \bar{H}=\bar{J}+\dfrac{\partial \bar{D}}{\partial t}=0\)라고 적을 수 있다.<br />
<br />
Charge conservation : \(\oiint \bar{J}\cdot d\bar{S}=\dfrac{\mathrm{d} }{\mathrm{d} t}\iiint_{V}\rho dV\)에서도 divergence theorem을 사용해서<br />
\(\triangledown \cdot \bar{J}=-\dfrac{\partial \rho }{\partial t}\)로 적을 수 있다.<br />
<br />
이렇게 정리한 식들을 differential form 또는 point form이라 부른다.<br />
\(\triangledown\)이 공간 미분이라 differential form이라고 부르기도 하고,<br />
공간 내 한 점에서만 사용 가능한 식이라는 의미로 point form이라고도 부른다.<br />
<br />
이 form의 가정은 함수들이 모두 미분 가능하다는거다.<br />
field가 공간 내 어딘가에서 특정 방향으로 미분 불가능하게 변하면, 그 점에서는 \(\dfrac{\partial }{\partial x}\)같은 연산이 불가능해서 이 form을 쓸 수 없다.<br />
그래서 boundary condition을 유도할때 항상 Integral form을 쓰는 것이다.<br />
<br />
Derived Equations:<br />
Independent한 식들은 위 식이 다고, 이제는 위 식에서 나오는 dependent 식들을 보려고 한다.<br />
<br />
i) \(\triangledown \times \bar{E}=-\dfrac{\partial \bar{B}}{\partial t}\)<br />
양 변에 \(\triangledown \cdot\)를 씌운다. \(\triangledown \cdot \left (  \triangledown \times \bar{E}\right )=\triangledown \cdot \left (  -\dfrac{\partial \bar{B}}{\partial t}\right )\)<br />
<br />
이때 \(\triangledown \cdot \left (  \triangledown \times \bar{E}\right )\)는 Vector identity에 의해 \(\triangledown \cdot \left (  \triangledown \times \bar{E}\right )=0\).<br />
그리고 공간 미분(\(\triangledown \cdot\))과 시간 미분\(\left (\dfrac{\partial }{\partial t}\right )\)은 독립이니까 순서를 바꿀 수 있다.<br />
따라서 \(\triangledown \cdot \left (  -\dfrac{\partial \bar{B}}{\partial t}\right )=-\dfrac{\partial }{\partial t}\left ( \triangledown \cdot \bar{B} \right )\)<br />
정리하면 \(-\dfrac{\partial }{\partial t}\left ( \triangledown \cdot \bar{B} \right )=0\)이다. 따라서, \(\triangledown \cdot \bar{B}\)는 시간에 대한 상수다. 시간으로 미분했을때 0이 되니까.<br />
이때, 이 상수는 우리 맘대로 정하면 된다. 그러니 계산이 쉽도록, \(\triangledown \cdot \bar{B}=0\)으로 놓는다.<br />
다른 상수로 놔도 상관은 없는데, 아무 의미 없이 그냥 그 수치만큼 답이 차이날 것이다.<br />
<br />
ii) \(\triangledown \times \bar{H}=\bar{J}+\dfrac{\partial \bar{D}}{\partial t}\)<br />
여기서도 양 변에 \(\triangledown \cdot\)를 씌운다. \(\triangledown \cdot \left (\triangledown \times \bar{H}  \right )=\triangledown \cdot \left (\bar{J}+\dfrac{\partial \bar{D}}{\partial t}  \right )\)<br />
<br />
여기서도 Vector identity에 의해 \(\triangledown \cdot \left (  \triangledown \times \bar{H}\right )=0\)이 되고,<br />
우변은 공간 미분(\(\triangledown \cdot\))과 시간 미분\(\left (\dfrac{\partial }{\partial t}\right )\)의 순서를 바꿔 \(\triangledown \cdot \bar{J}+\dfrac{\partial }{\partial t}\left ( \triangledown \cdot \bar{D} \right )\)이라 적을 수 있다.<br />
여기에 continuity equation\(\left (\triangledown \cdot \bar{J}=-\dfrac{\partial \rho }{\partial t}  \right )\)을 적용하면 \(-\dfrac{\partial \rho }{\partial t}+\dfrac{\partial }{\partial t}\left ( \triangledown \cdot \bar{D} \right )\)이 나온다.<br />
이 식이\(\triangledown \cdot \left (  \triangledown \times \bar{H}\right )\)랑 같은 거니까, \(-\dfrac{\partial \rho }{\partial t}+\dfrac{\partial }{\partial t}\left ( \triangledown \cdot \bar{D} \right )=0\)이다.<br />
<br />
정리하면 \(\dfrac{\partial }{\partial t}\left (\rho- \triangledown \cdot \bar{D} \right )=0\). 따라서 \(\rho- \triangledown \cdot \bar{D}\)는 시간에 대한 상수다. 얘도 아무 값으로나 두면 되는데, 계산의 편의를 위해 \(\rho- \triangledown \cdot \bar{D}=0\)으로 놓자.<br />
결과적으로, \(\triangledown \cdot \bar{D}=\rho\)<br />
<br />
정리하면:<br />
\(\triangledown \times \bar{E}=-\dfrac{\partial \bar{B}}{\partial t},\;\triangledown \times \bar{H}=\bar{J}+\dfrac{\partial \bar{D}}{\partial t}\;:\;Independent\;Equations\)<br />
<br />
\(\triangledown \cdot \bar{B}=0,\;\triangledown \cdot \bar{D}=\rho\;:\;Dependent\;Equations\)<br />
<br />
\(\triangledown \cdot \bar{J}=-\dfrac{\partial \rho }{\partial t}\;:\;Charge\;Conservation\;/\;Continuity\;Equation\)<br />
<br />
이 식들을 통해 \(\bar{E}\), \(\bar{D}\), \(\bar{B}\), \(\bar{H}\), \(\bar{J}\), \(\rho\)를 구하면 된다.<br />
<br />
근데, \(\bar{E}\), \(\bar{D}\), \(\bar{B}\), \(\bar{H}\), \(\bar{J}\), \(\rho\)를 모두 구해야 하면, 미지수 총 몇개를 구해야 하는 것인가?<br />
3차원 공간이니, 벡터 하나당 x,y,z 성분 총 3개 스칼라 성분을 구해줘야 한다.<br />
지금 벡터5개, 스칼라1개를 구하려 하고 있으니 미지수는 총 \(3\times 5+1=16\)개다.<br />
그럼, 우린 16개 식을 갖고 있나?<br />
<br />
Dependent 식들은 새로운 정보를 주지 못하니까,<br />
\(\triangledown \times \bar{E}=-\dfrac{\partial \bar{B}}{\partial t}\)에서 3개,<br />
\(\triangledown \times \bar{H}=\bar{J}+\dfrac{\partial \bar{D}}{\partial t}\)에서 3개,<br />
\(\triangledown \cdot \bar{J}=-\dfrac{\partial \rho }{\partial t}\)에서 1개로 총 7개 식 뿐이다.<br />
<br />
그래서, \(\bar{E}\), \(\bar{D}\), \(\bar{B}\), \(\bar{H}\), \(\bar{J}\), \(\rho\)를 모두 구하려면 식이 더 필요하다.<br />
<br />
Constitutive Relations:<br />
일반적으로 \(\bar{B}\),\(\bar{D}\),\(\bar{J}\)는 \(\bar{E}\)와 \(\bar{H}\)에 대한, 상당히 복잡한 함수다.<br />
\(\bar{B}=\bar{F_{1}}\left ( \bar{E},\dfrac{\partial \bar{E}}{\partial t},\cdots ,\bar{H},\dfrac{\partial \bar{H}}{\partial t},\cdots,\left| \bar{E}\right|^{2},\left| \bar{E}\right|^{3},\cdots  \right )\)<br />
\(\bar{D}=\bar{F_{2}}\left (\cdots \right )\)<br />
\(\bar{J}=\bar{F_{3}}\left (\cdots \right )\)<br />
이건 너무 복잡하니까, 적절히 몇가지 가정을 해보자.<br />
<br />
Assume:<br />
i) Stationary medium.<br />
날씨가 바뀌면 공기의 특성이 바뀌고, 대기권 전리층 전하 분포 또한 계속해서 바뀐다.<br />
이런 영향은 없다고 가정하자. 즉 시간에 대해 independent한 매질을 가정하고, 식으로 표현하면 \(\dfrac{\partial \left ( \cdot  \right )}{\partial t}\)를 모두 0으로 보자는 거다.<br />
<br />
ii) Linear medium.<br />
Avalanche photodiode에서 전기장에 의해 전류가 생기는데, 이 경우에는 전기장과 전류의 관계가 nonlinear하다.<br />
유전 파괴가 일어나는 경우도 전류가 전기장에 대해 nonlinear한 상황이 된다.<br />
우리는 linear한 매질을 가정해서, 이런 현상들이 없다고 가정할 것이다.<br />
식으로 표현하면 \(\left ( \cdot  \right )^{2},\left ( \cdot  \right )^{3}\)등 제곱, 세제곱항의 영향을 받는다고 표현할 수 있다.<br />
<br />
Then:<br />
\(\bar{B}=\bar{\bar{\mu}}\bar{H}\), \(\bar{\bar{\mu}}\): Permeability[H/m]<br />
\(\bar{D}=\bar{\bar{\varepsilon}}\bar{E}\), \(\bar{\bar{\varepsilon}}\): Permittivity[F/m]<br />
\(\bar{J}=\bar{\bar{\sigma}}\bar{E}\), \(\bar{\bar{\sigma}}\): Conductivity[S/m]<br />
<br />
이때 위에 선 두개 그어놓은 것은 tensor라는 뜻이다.<br />
매질에 대한 가정을 2가지(Stationary, Linear)했는데, 여기에 isotropic(등방성)이 추가되면 그때는 tensor 대신 scalar function을 사용할 수 있다.<br />
왜 scalar ‘function’이나면, 공간에 대한 함수니까. \(\mu(x,y,z)\)이런 식으로, isotropic을 가정해도 다 scalar가 아니라 scalar function이다.<br />
<br />
하여간, 이렇게 나온 벡터식 3개 \(\left ( \bar{B}=\bar{\bar{\mu}}\bar{H}, \bar{D}=\bar{\bar{\varepsilon}}\bar{E}, \bar{J}=\bar{\bar{\sigma}}\bar{E} \right )\)면 스칼라 식 9개니까, 앞의 스칼라 식 7개와 함께 보면 스칼라 식 16개라 \(\bar{E}\), \(\bar{D}\), \(\bar{B}\), \(\bar{H}\), \(\bar{J}\), \(\rho\)를 모두 구할 수 있다.<br />
<br />
근데 이건 constitutive relation에서 Stationary, Linear medium을 가정한거다. 이런 가정을 쓰지 못하는 medium들도 많다.<br />
이런 가정을 쓰지 못하는 medium으로는 chiral medium, metamaterial 등이 있다.<br />
<br />
Note. Chiral Medium:<br />
\(\bar{B}=\mu \left ( \bar{H}+\beta \triangledown \times \bar{H} \right )\)<br />
\(\bar{D}=\mu \left ( \bar{E}+\beta \triangledown \times \bar{E} \right )\)<br />
이게 Chiral medium의 constitutive relation이다. 이걸 적용해서 \(\bar{E}\), \(\bar{D}\), \(\bar{B}\), \(\bar{H}\), \(\bar{J}\), \(\rho\)를 모두 구하는 것은 상당히 복잡한 일이 된다. 그래서 Chiral medium은 계산이 어렵다.<br />
<br />
이제 여기다가 가정을 몇가지 더해보려고 한다.<br />
i) Isotropic Medium:<br />
\(\bar{B}=\bar{\bar{\mu}}\bar{H}\rightarrow \bar{B}=\mu\bar{H}\)<br />
\(\bar{D}=\bar{\bar{\varepsilon}}\bar{E}\rightarrow \bar{D}=\varepsilon\bar{E}\)<br />
\(\bar{J}=\bar{\bar{\sigma}}\bar{E}\rightarrow \bar{J}=\sigma\bar{E}\)<br />
이때 \(\mu,\varepsilon,\sigma\)는 모두 scalar function이다.<br />
<br />
ii) Homogeneous Medium:<br />
Homogeneous medium에서는 \(\mu,\varepsilon,\sigma\)가 모두 위치에 상관 없이 같은 값을 갖는다.<br />
즉, \(\mu,\varepsilon,\sigma\)가 모두 상수가 된다.<br />
<br />
위에서 언급한 가정들이 모두 적용되어 \(\mu,\varepsilon,\sigma\)가 모두 상수인 medium을 ‘simple medium’이라 부른다.<br />
<br />
Free space에서는:<br />
\(\mu=\mu_{o}=4\pi\cdot 10^{-7}\)[H/m]<br />
\(\varepsilon=\varepsilon_{o}=8.854\cdot 10^{-12}\)[F/m]<br />
\(\sigma=0\)<br />
<br />
\(\sigma\)가 큰 medium을 ‘conductor’라 부른다.<br />
\(\sigma\)가 작은 medium을 옛날에는 ‘Insulator’라 불렀는데, 어느 순간부터 ‘Dielectric’이라 부른다.<br />
<br />
Relative permittivity(비유전율): \(\varepsilon_{r}=\dfrac{\varepsilon}{\varepsilon_{o}}\)<br />
Relative permeability(비투자율): \(\mu_{r}=\dfrac{\mu}{\mu_{o}}\)<br />
<br />
문장 내에서 ‘유전율’,’투자율’이라 하면 그게 relative 수치인지 아니면 절대 수치인지 문맥상 파악해야 한다.<br />
<br />
비유전율은 언제나 1보다 작다고 배우긴 하는데,<br />
플라즈마 또는 메타물질을 쓰면 비유전율이 1보다 작은, 또는 0보다 작은 물질도 만들 수 있다.<br />
<br />
비투자율은 좀 다양하다.<br />
\(\mu_{r}&lt;1\): Diamagnetic(반자성). 0.999, 0.9999 정도 값을 갖는다. 1보다 크게 작지는 않다.<br />
\(\mu_{r}&gt;1\): Paramagnetic(상자성). 1.001, 1.0001 정도 값을 갖는다.<br />
\(\mu_{r}&gt;&gt;1\): Ferromagnetic(강자성). 1000, 10000 정도 값을 갖는다.<br />
<br />
희토류를 쓰면 비투자율을 수만, 수십만까지도 올릴 수 있다.<br />
<br />
여기서, 이런 생각을 해보자. 투명하다는게 뭔가?<br />
어떤 유전체에 전기장이 걸리면 그 유전체 안의 dipole들이 전기장 방향대로 정렬한다.<br />
이때 정렬이 잘 될수록 전기장의 영향을 크게 받는다고 해석할 수 있고,<br />
정렬이 잘 안될수록 전기장의 영향을 적게 받는다고, 즉 전기장에 대해 투명하다고 볼 수 있다.<br />
<br />
이때 dielectric 내에서 정리된 field와 원래 있던 field를 더해서: \(\bar{D}=\varepsilon_{o}\bar{E}+\bar{P}\)라고 쓰도록 하자.<br />
이때 \(\bar{P}\)는 Electric Polarization Vector로서, secondary field다.<br />
수식상으로나 직관적으로나, \(\bar{P}=0\)인 공간은 \(\bar{E}\) 입장에서 free space와 동일할 것이다.<br />
<br />
이때 \(\bar{P}\)의 크기는 \(\bar{E}\)에 의해 결정되는, \(\bar{P}\)에 대한 함수다.<br />
\(\bar{P}=\varepsilon_{o}\chi_{e}\bar{E}\)라고 적는다. 이때 \(\chi_{e}\): Electric susceptibility.<br />
Susceptibility가 클수록 그 system은 주변 환경 변화에 민감하게 반응한다.<br />
<br />
susceptibility를 써서 표현하면:<br />
\(\bar{D}=\varepsilon_{o}\bar{E}+\bar{P}=\varepsilon_{o}\left ( 1+\chi_{e} \right )\bar{E}=\varepsilon_{r}\varepsilon_{o}\bar{E}=\varepsilon\bar{E}\),<br />
\(\varepsilon_{r}=1+\chi_{e}\)<br />
<br />
\(\bar{H}\)에 의한 반응도 비슷하다. \(\bar{B}=\mu_{o}\bar{H}+\bar{M}\),<br />
\(\bar{M}\): Magnetic Polarization Vector,<br />
\(\chi_{m}\): Magnetic susceptibility,<br />
\(\bar{M}=\mu_{o}\chi_{m}\bar{H}\),<br />
\(\bar{B}=\mu_{o}\bar{H}+\bar{M}=\mu_{o}\left ( 1+\chi_{m} \right )\bar{H}=\mu_{r}\mu_{o}\bar{H}=\mu\bar{H}\),<br />
\(\mu_{r}=1+\chi_{m}\)<br />
<br />
이렇게 투명하다는 개념과 susceptibility로 \(\mu\), \(\varepsilon\) 변화를 생각할 수 있다.<br />
<br />
Wave equation in a simple medium:<br />
앞에서 말했듯, simple medium은 \(\mu, \varepsilon, \sigma\) 모두가 상수인 medium<br />
\(\triangledown \times \bar{E}=-\dfrac{\partial \bar{B}}{\partial t}\),<br />
\(\triangledown \times \bar{H}=\bar{J}+\dfrac{\partial \bar{D}}{\partial t}=\left ( \sigma+\varepsilon\dfrac{\partial }{\partial t} \right )\bar{E}\)가 우리가 갖고 있는 2개 식이고,<br />
<br />
Derived equation들은 다음과 같다.<br />
\(\triangledown \cdot \bar{B}=0\)<br />
\(\triangledown \cdot \bar{E}=\dfrac{\rho}{\varepsilon}\)<br />
<br />
\(\triangledown \times \bar{H}=\left ( \sigma+\varepsilon\dfrac{\partial }{\partial t} \right )\bar{E}\)에서 양변에 Div를 하면:<br />
\(\triangledown \cdot \left ( \triangledown \times \bar{H} \right )=\triangledown \cdot \left ( \sigma+\varepsilon\dfrac{\partial }{\partial t} \right )\bar{E}=\left ( \sigma+\varepsilon\dfrac{\partial }{\partial t} \right )\left ( \triangledown \cdot \bar{E}\right )\)<br />
<br />
여기에 \(\triangledown \cdot \bar{E}=\dfrac{\partial \rho}{\partial \varepsilon}\)를 적용하면,<br />
\(\left ( \sigma+\varepsilon\dfrac{\partial }{\partial t} \right )\left ( \triangledown \cdot \bar{E}\right )=\left ( \sigma+\varepsilon\dfrac{\partial }{\partial t} \right )\left ( \dfrac{\rho}{\varepsilon} \right )\)<br />
<br />
따라서 \(\triangledown \cdot \left ( \triangledown \times \bar{H} \right )=\left ( \sigma+\varepsilon\dfrac{\partial }{\partial t} \right )\left ( \dfrac{\rho}{\varepsilon} \right )\)인데,<br />
Vector identity에 의해 \(\triangledown \cdot \left ( \triangledown \times \bar{H} \right )=0\)이다.<br />
<br />
따라서 \(\left ( \sigma+\varepsilon\dfrac{\partial }{\partial t} \right )\left ( \dfrac{\rho}{\varepsilon} \right )=0\)<br />
근데 simple medium이니까, \(\varepsilon, \sigma\)는 상수고 \(\rho\)만 함수다.<br />
<br />
사실 \(\rho\)는 시간과 공간에 대한 함수다. \(\triangledown \cdot \bar{E}=\dfrac{\rho}{\varepsilon}\)의 \(\triangledown \times \bar{E}\)부터 일단 공간에 대한 함수니까.<br />
<br />
\(\rho\)가 함수니까 \(\rho\)를 \(\rho(t)\)로 적으면:<br />
\(\left ( \sigma+\varepsilon\dfrac{\partial }{\partial t} \right )\left ( \dfrac{\rho(t)}{\varepsilon} \right )=\dfrac{\partial \rho(t) }{\partial t}+\dfrac{\sigma }{\varepsilon}\cdot\rho(t)=0\)<br />
<br />
위 식을 정리하면:<br />
\(\rho(t)=\rho(0) \cdot e^{-\frac{\sigma}{\varepsilon}t}\)<br />
<br />
ex) Fresh water: \(\varepsilon=81\varepsilon_{o}\), \(\sigma=10^{-3}[S/m]\) (유전율 엄청 높은 물질)<br />
\(\tau = \dfrac{\rho}{\varepsilon} = 7 \cdot 10^{-7}[s]\).<br />
따라서, 물에 전하를 던지면 decay constant가 \(7 \cdot 10^{-7}[s]\)다.<br />
<br />
ex) Metal: \(\varepsilon=\varepsilon_{o}\), \(\sigma=10^{7}[S/m]\)<br />
\(\tau = \dfrac{\rho}{\varepsilon} = 8 \cdot 10^{-21}[s]\).<br />
물에서보다 훨씬 빠르게 사라지는걸 확인할 수 있다.<br />
<br />
이번에는 Div 대신 Curl을 해볼거다.<br />
식도 바꿔서, \(\triangledown \times \bar{H}=\bar{J}+\dfrac{\partial \bar{D}}{\partial t}\) 말고 \(\triangledown \times \bar{E}=-\dfrac{\partial \bar{B}}{\partial t}\)에 Curl을 해볼거다.<br />
<br />
\(\triangledown \times \left ( \triangledown \times \bar{E} \right )=\triangledown \times \left ( -\dfrac{\partial \bar{B}}{\partial t} \right )=-\mu\dfrac{\partial}{\partial t}\left ( \triangledown \times \bar{H} \right )\)<br />
<br />
여기서 \(\triangledown \times \left ( \triangledown \times \bar{E} \right )=-\mu \dfrac{\partial }{\partial t}\left ( \triangledown \times \bar{H} \right )\)<br />
<br />
우변은 그냥 정리, 좌변은 \(\triangledown \times \bar{H}=\left ( \sigma+\varepsilon\dfrac{\partial }{\partial t} \right )\bar{E}\)를 대입하면:<br />
\(\triangledown \left ( \triangledown \cdot \bar{E} \right ) - \triangledown^{2}\bar{E} = -\mu \dfrac{\partial }{\partial t}\left ( \sigma+\varepsilon\dfrac{\partial }{\partial t} \right )\bar{E}\)<br />
<br />
이때, charge가 없는 공간이라 하면 \(\triangledown \cdot \bar{E} = 0\)<br />
<br />
그러면 \(-\triangledown^{2}\bar{E}=-\mu\sigma \dfrac{\partial \bar{E}}{\partial t} - \mu\varepsilon \dfrac{\partial^{2} \bar{E}}{\partial^{2} t}\)<br />
<br />
\(\left ( \triangledown^{2}-\mu\sigma \dfrac{\partial }{\partial t} - \mu\varepsilon \dfrac{\partial^{2} }{\partial^{2} t} \right )\bar{E}=0\)<br />
<br />
자기장으로 해도 \(\left ( \triangledown^{2}-\mu\sigma \dfrac{\partial }{\partial t} - \mu\varepsilon \dfrac{\partial^{2} }{\partial^{2} t} \right )\bar{H}=0\)<br />
<br />
\(-\mu\sigma \dfrac{\partial }{\partial t}\)는 damping effect, 또는 viscous effect를 야기하는 damping term이다.<br />
\(-\mu\varepsilon \dfrac{\partial^{2} }{\partial^{2} t}\)는 속도를 보여주는 term이다.<br />
\(v = \dfrac{1}{\sqrt{\mu\varepsilon}}\), free space에서는 \(c = \dfrac{1}{\sqrt{\mu_{o}\varepsilon_{o}}}\)<br />
<br />
우리가 지금 한 일:<br />
서로 coupled되어있던 식이었던 \(\triangledown \times \bar{E}=-\mu\dfrac{\partial \bar{H}}{\partial t}\), \(\triangledown \times \bar{H}= \left (\sigma + \varepsilon\dfrac{\partial}{\partial t} \right )\bar{E}\)를,<br />
<br />
\(\left ( \triangledown^{2}-\mu\sigma \dfrac{\partial }{\partial t} - \mu\varepsilon \dfrac{\partial^{2} }{\partial t^{2}} \right )\bar{E}=0\), \(\left ( \triangledown^{2}-\mu\sigma \dfrac{\partial }{\partial t} - \mu\varepsilon \dfrac{\partial^{2} }{\partial t^{2}} \right )\bar{H}=0\) 라는 각자의 식으로 쪼개놓았다.<br />
<br />
이렇게 각자에 대한 식으로 쪼갤 수 있었지만, 대신 미분방정식의 차수가 올라가는 문제가 생겼다.<br />
<br />
이렇게 쪼개진, 각자에 대한 식을 ‘wave equation’이라 부른다.<br />
이걸 벡터처럼 묶어서 적으면:<br />
\(\left ( \triangledown^{2}-\mu\sigma \dfrac{\partial }{\partial t} - \mu\varepsilon \dfrac{\partial^{2} }{\partial^{2} t} \right )\begin{Bmatrix}\bar{E} \\ \bar{H}\end{Bmatrix}=0\)<br />
<br />
우변의 0은 원래 source를 나타내지만, source가 없어서 0이다. 그래서 이건 source-free equation이다.<br />
<br />
식에 들어간 \(\triangledown^{2}\)는 laplacian이라 부른다. cartesian에서는 \(\triangledown^{2} = \dfrac{\partial^{2} }{\partial x^{2}} + \dfrac{\partial^{2} }{\partial y^{2}} + \dfrac{\partial^{2} }{\partial z^{2}}\)<br />
<br />
그리고 \(\triangledown^{2}\bar{E}=&lt;\triangledown^{2}\bar{E}_{x} , \triangledown^{2}\bar{E}_{y} , \triangledown^{2}\bar{E}_{z}&gt;\)로 계산한다.<br />
스칼라 함수에 대해서는\(\triangledown^{2} f = \triangledown \cdot \left(\triangledown f \right)\)<br />
<br />
여기서 알게 되는 속력으로 굴절률도 정의한다.<br />
for dielectric medium : \(n = \dfrac{c}{v} = \sqrt{\varepsilon_{r}\mu_{r}}\) = refractive index<br />
광학에서는 n, 전자기학에서는 \(\sqrt{\varepsilon_{r}\mu_{r}}\)를 많이 쓴다.<br />
<br />
하여간, 위에서 구한 wave equation은 꽤 복잡하다. 그러니 simple solution(\(\sigma = 0\))을 구해보자.<br />
\(\left ( \triangledown^{2} - \mu\varepsilon \dfrac{\partial^{2} }{\partial t^{2}} \right )\begin{Bmatrix}\bar{E} \\ \bar{H}\end{Bmatrix}=0\). 그리고 편의를 위해 x방향으로만 진행한다고 하면:<br />
\(\left ( \dfrac{\partial^{2} }{\partial x^{2}} - \mu\varepsilon \dfrac{\partial^{2} }{\partial t^{2}} \right )\begin{Bmatrix}\bar{E} \\ \bar{H}\end{Bmatrix}=0\)가 되어, 공학수학에 자주 나오는 형태의 편미분 방정식이 된다. 벡터식이라는 점에 주의해서 풀어보자.<br />
<br />
Try a solution : \(\bar{E} \left( x,t \right) = \bar{E}_{o} \cdot f\left(x,t \right)\), 이때 \(\bar{E}_{o}\)는 constant vector.<br />
<br />
그리고 미리 예측해보자면, 2차 미분방정식이니까 solution도 2개가 나올 것이다.<br />
<br />
\(f \left( x,t \right) = f_{1}\left( x-vt \right) + f_{2}\left( x+vt \right)\), \(v=\dfrac{1}{\sqrt{\varepsilon\mu}}\).<br />
이때 \(f_{1}\left( x-vt \right)\)는 +방향 wave, \(f_{2}\left( x+vt \right)\)는 -방향 wave.<br />
<br />
일단 \(\bar{E} \left( x,t \right) = \bar{E}_{o} \cdot f_{1}\left(x-vt \right)\)형태면 임의의 \(f_{1}\)에 대해 위의 wave equation을 만족한다. 그러면, 임의의 \(f_{1}\)에 대해 \(\bar{E} \left( x,t \right) = \bar{E}_{o} \cdot f_{1}\left(x-vt \right)\)가 맥스웰 방정식도 만족하나?<br />
<br />
\(\triangledown \cdot \bar{E} = 0\)을 만족하는지 확인해보자.<br />
<br />
\(\triangledown \cdot \bar{E} = \triangledown \cdot \left( \bar{E}_{o} \cdot f_{1} \right) = \bar{E}_{o} \cdot \triangledown f + f\triangledown \cdot \bar{E}_{o}\). 이때, \(\bar{E}_{o}\)는 constant vector니까 \(\triangledown \cdot \bar{E}_{o}=0\)<br />
<br />
따라서 \(\triangledown \cdot \bar{E} =\bar{E}_{o} \cdot \triangledown f\). 그리고 파동이 x방향으로만 진행하고 있으니까,<br />
\(\triangledown \cdot \bar{E} =\bar{E}_{o} \cdot \triangledown f =\bar{E}_{o} \cdot \left( \hat{x} \dfrac{\partial f}{\partial x} \right) = \left( \bar{E}_{o} \cdot \hat{x} \right) \dfrac{\partial f}{\partial x}\).<br />
이게 0이 되어야 맥스웰 방정식을 만족하는건데, 얘가 0이 되려면 \(\bar{E}_{o} \cdot \hat{x} = 0\)이 되어야 한다. 즉, \(\bar{E}_{o} \perp \hat{x}\)가 되어야 한다.<br />
<br />
결론적으로, 맥스웰 방정식에 의해, simple medium 내에서 진행하는 electromagnetic wave의 \(\bar{E}\)는 진행방향과 수직이다.<br />
Simple medium이라는 조건이 붙는 이유는, 일반적으로는 \(\triangledown \cdot \bar{D}=0\)인데 simple medium이어야 \(\bar{D}=\varepsilon\bar{E}\) (\(\varepsilon\)은 상수) 라서 \(\triangledown \cdot \bar{E}=0\)이 된다.<br />
<br />
그럼 magnetic field는 진행 방향과 어떤 관계가 있을까?<br />
이번에도 \(\bar{E}=\bar{E}_{o} \cdot f_{1} \left( x-vt \right)\)를 가져와서 \(\triangledown \times \bar{E} = -\dfrac{\partial \bar{B}}{\partial t}\)를 만족하는지 확인해보자.<br />
<br />
\(\triangledown \times \bar{E} = \triangledown \times \left( \bar{E}_{o} \cdot f_{1} \right) = \triangledown f_{1} \times \bar{E}_{o} + f_{1}\triangledown \times \bar{E}_{o}\)<br />
<br />
이때 \(\bar{E}_{o}\)는 constant vector기 때문에, \(\triangledown \times \bar{E}_{o}=0\)이다. 상수를 미분하면 0이니까.<br />
<br />
따라서 \(\triangledown f_{1} \times \bar{E}_{o} + f_{1}\triangledown \times \bar{E}_{o} = \triangledown f_{1} \times \bar{E}_{o}\)<br />
<br />
Gradient를 풀어놓으면 \(\triangledown f_{1} \times \bar{E}_{o} = \left ( \hat{x} \dfrac{\partial f_{1}}{\partial x} \right) \times \bar{E}_{o}\)
<br />
이때, \(f_{1} \left( x-vt \right)\)였으니 \(\dfrac{\partial f_{1}}{\partial x} = -\dfrac{1}{v}\dfrac{\partial f_{1}}{\partial t}\)라고 적을 수 있다. 둘 다 \(f'_{1} \left( x-vt \right)\)니까.<br />
<br />
따라서 \(\left ( \hat{x} \dfrac{\partial f_{1}}{\partial x} \right) \times \bar{E}_{o} = \left(\hat{x} \times \bar{E}_{o} \right) \cdot \left( -\dfrac{1}{v}\dfrac{\partial f_{1}}{\partial t} \right)\)<br />
<br />
이 식이 \(-\dfrac{\partial \bar{B}}{\partial \bar{t}}\)가 되어야 \(\triangledown \times \bar{E} = -\dfrac{\partial \bar{B}}{\partial t}\)를 만족할 것이다.<br />
<br />
\(-\dfrac{\partial \bar{B}}{\partial t} = \left(\hat{x} \times \bar{E}_{o} \right) \cdot \left( -\dfrac{1}{v}\dfrac{\partial f_{1}}{\partial t} \right)\)라고 놓고, 여기서 양변을 t로 적분하면<br />
<br /></p>]]></content><author><name></name></author><category term="Electromagnetics" /><summary type="html"><![CDATA[고급마이크로파공학 내용 정리 우리 교재는 Harrington의 ‘Time-Harmonic Electromagnetic Fields’다. 60년정도 된 책인데, 오타가 없는 대단한 책이다. 그래서 버전도 1개뿐이다. 전기전자공학과 대학원은 이 책을 많이 쓰고, 물리학과 대학원은 Jackson의 ‘Classical Electrodynamics’를 많이 쓴다. 우리 책은 mks 단위계, Jackson 책은 cgs단위계를 사용한다. 유럽은 Linguistic notation : Curl \(\bar{E}\) 미국은 Gibbs notation : \(\triangledown \times \bar{E}\) 이 과목은 고급마이크로파공학 보다는 고급전자장론, 또는 고급전자기학 정도가 어울리는 과목이다. 고급마이크로파공학이란 이름은 30년전에 지어진 이름이라 그냥 쓰는거다. Electromagnetics Theory. 현대물리, 양자역학이 들어오면서 고전역학은 상당 부분 수정되어야 했다. 그런데 전자기학은 전혀 바뀌지 않았다! 그만큼 수학적으로 정교한 이론이다. Microscopic Theory: 원자, 분자 한개의 특성. 슈뢰딩거 방정식 Macroscopic Theory: 통계적인 특성. 맥스웰 방정식. 원자,분자 단위에서는 적용 불가 원자, 분자가 아보가드로 수 수준으로 많은 경우부터 Macroscopic model을 사용할 수 있다. 우리가 배울 내용은 Macroscopic theory다. Field Quantities: \(\bar{E}\) : Electric field intensity [V/m] \(\bar{H}\) : Magnetic field intensity \(\bar{D}\) : Electric flux density \(\bar{B}\) : Magnetic flux density \(\bar{J}\) : Electric current density \(\rho\) : Electric charge density \(\bar{E}\)는 Electric field, \(\bar{H}\) : Magnetic field라고 자주 부르지만, 엄밀한 명칭은 intensity까지 붙여줘야 한다. 이 물리량들은 모두 시간과 공간에 대한 함수다. \(f(x,y,z,t)\) Faraday’s Law: 어떤 폐곡선(Closed Contour) c가 있다고 해보자. 이 폐곡선에 대해: \(\oint_{c}^{}\bar{E}\cdot d\bar{l}=-\dfrac{d}{dt}\iint_{S}^{}\bar{B}\cdot \hat{n}dS\) 라는게 Faraday’s Law다.]]></summary></entry><entry><title type="html">Cadence Virtuoso</title><link href="http://localhost:4000/circuits/2023/10/04/Circuits-Cadence-Virtuoso.html" rel="alternate" type="text/html" title="Cadence Virtuoso" /><published>2023-10-04T19:31:29+09:00</published><updated>2023-10-04T19:31:29+09:00</updated><id>http://localhost:4000/circuits/2023/10/04/Circuits%20-%20Cadence%20Virtuoso</id><content type="html" xml:base="http://localhost:4000/circuits/2023/10/04/Circuits-Cadence-Virtuoso.html"><![CDATA[<p>Cadence 사람들 왔을 때 얘기:<br />
ASIL: Automotive Safety Integrity Level. ASIL-A~D가 있는데, D가 가장 높은 단계다.<br />
자동차 안전 기준은 ISO 26262에 기반한다.<br />
USF: Unified Safety Format<br />
UPF: Unified Power Format<br />
<br />
RTL-&gt; Netlist로 Synthsize할 때, 사고 위험 없이 안전하게 합성됐는지 확인하는 기준이 USF다. UPF는 Low power 설계에서 사용되는 기준이다.<br />
<br />
Cadence의 Legato에서는 회로가 안전한지 확인하기 위해, 회로 내의 모든 Connection을 한번씩 다 끊어본다. 돌리는 데에 연산력이 엄청나게 필요해서, CPU가 여러 개 있어도 시간이 엄청나게 걸린다.<br />
<br />
원래 .scs파일, 즉 netlist 파일은 매번 캐시메모리에 저장된다. 근데 여기서는 캐시메모리에 netlist 하나 박아놓고 fault만 달라지게 계속 돌린다.<br />
<br />
설마 이런 metal line들도 끊어지겠냐 싶은 line들도 있지만, 자동차는 정말 천만분의1도 놓치면 안돼서 이렇게까지 한다.<br />
근데, 돌릴때 조건을 conservative로 놓는건 조금 신중해야 한다. Conservative 고르면 회로가 만분의 일 오차까지(80dB) 보게 된다. 이러다보면 시간도 엄청 오래 걸리고, 잘 수렴도 안해서 conversion error가 날 수 있다. 캐패시터 전압이 +0.0001에서 -0.0001 사이를 진동한다든가.<br />
<br />
그리고, short보다 open이 들어간 회로가 시간이 더 많이 걸린다.<br />
Open ~= 커다란 저항 = 작은 전류라서 이 값으로 수렴하는 데에 시간이 오래 걸리기 때문이다.<br />
<br />
회로를 끊어보는 방식은 IEEE 2427을 따른다.<br />
<br />
Cadence에서 이 tool을 광고하는 근거는, 이 tool은 연산을 단순화하기 위해 여러가지 기술들이 적용되어 있다는 점이다.<br />
<br />
MOSFET aging에 대한 모델은 standard가 없어서, 회사마다 각자 모델을 갖고 있다. 케이던스도 나름의 모델이 있고, 삼성전자, TSMC도 각자의 모델이 있다.<br />
<br /></p>

<p>Cosim Simulation:<br />
지금까지는 칩 안의 아날로그 파트만 시뮬레이션했는데, 사실 전체 칩은 로직+아날로그니까 전체 칩 반응을 보려면 한꺼번에 돌려봐야 한다. 거기에 쓰는게 Cosim이다.<br />
<br />
Single power chip: 아날로그와 디지털이 같은 전압을 사용하는 chip<br />
이때는 LDO도 필요 없다.<br />
<br />
근데 DW7601은 Dual Power Chip이다. 이 칩은 1.8V와 3.3V를 쓰기 때문에, LDO가 필요하다.<br />
동운아나텍에서 쓰는 LDO는 로직에 전원 공급하기 위해 쓴다.<br />
<br />
Cosim에서, 로직은 모두 function으로 모델링되어 있다. Gate가 몇만개씩 들어가다보니, 그걸 다 모델링 없이 schematic으로 돌리면 진짜 너무 오래 걸릴 것이다.<br />
<br />
아날로그쪽도, 아날로그쪽 전체를 schematic으로 돌리면 너무 오래 걸리기 때문에 main function, 즉 검증하고자 하는 부분만 schematic으로 남겨두고 나머지는 Verilog로 모델링한다.<br />
<br />
그래서 옛날 프로젝트들을 보면 아날로그 block도 Verilog 모델이 있는 경우가 많다. BGR같은건 Verilog로 모델링하기 쉬우니까.<br />
<br />
External input: DW7601은 TP(Thermopile)이 external input이고, AF는 액추에이터 출력이 external input이다.<br />
<br />
로직 팀한테 cosim 만들어달라고 하면, 레지스터 맵에 나오는거 모두 control 가능할 정도로 만들어서 준다. 로직팀이 만들어주는건 RTL이랑 DK다.<br />
<br />
RTL: Register Tranfer Language,<br />
DK: Design Kit<br />
<br />
로직 팀이 만들어준걸로 측정, 입력은 우리가 한다.<br />
<br />
근데 Design Kit에 Standard cell, Memory IP, RTL 모두 포함이라고도 적혀있다.<br />
<br />
이때 memory 파일은 열어보면 1이랑 0밖에 안적혀있으니, 뭐가 뭔지 로직 팀한테 물어봐야 한다.<br />
<br />
또 강조하셨던 점은, 메모리 파일이랑 메모리가 저장되는 파일은 따로라는거다. 둘 다 가져와야 한다.<br />
<br />
task파일은 내가 손대는 파일은 아니고, 로직 팀에 원하는 기능 말하면 그거대로 만들어준다.<br />
<br />
cosim에서 전체를 schematic으로 돌리면, 오래 걸리는게 문제가 아니라 그냥 에러가 나버린다.<br />
<br />
cosim에서 썼던 cosim test plan이 그대로 CV plan이 된다.<br />
<br />
Clock이 들어간 block일 경우에는 cosim 돌아가는게 오래 걸린다.<br />
근데 I2C도 clock based잖아? 그래서 I2C는 다 verilog로 모델링해놨다.<br />
<br />
Config 파일에는 top schematic을 구성하는 모든 소자, block들의 정보가 들어있다.<br />
Config 파일에서 특정 cell을 schematic으로 돌릴지, verilog로 돌릴지 정할 수 있다.<br />
<br />
어떤 block을 시뮬레이션할 경우, 그 block과 연관된 block들도 모두 schematic으로 만들어놓아야 한다. 예를 들어 LDO를 simulation하면, LDO 뿐 아니라 관련 block들까지 다 schematic으로 만든다.<br />
<br />
그래서 cosim을 어떻게 돌리는가? 그냥 config 만들어주고, ADE L 켜서 simulator를 ams로 바꿔주면 된다. 원래는 spectre로 되어있을텐데, ams가 mixed signal용 시뮬레이터다.<br />
<br />
ams에서는 Verilog, Verilog-A, Verilog-AMS, VHDL, VHDL-AMS, SystemC, System Verilog등이 쓰일 수 있다.<br />
<br />
그 다음에 simulation – options – AMS simulator. 여기에서 ‘include option settings’를 하면 탭이 2개 있다.<br />
Library files/directories: .v file,<br />
Include options: .f file<br />
.f file은 .v file을 모아놓은 file이다.<br />
<br />
원래 logic쪽은 .v 파일, 즉 Verilog 파일을 받으면 virtuoso가 자동으로 .v파일에 적힌 내용을 구현하도록 gate를 연결해 회로도도 그려주고 layout도 그려준다. 그래서 원래는 .v파일만 있으면 된다.<br />
<br />
근데, revision할때가 문제다. Logic 내에서 작은 부분만 바꾸고 싶을 경우, Verilog 코드를 바꾸면 layout 결과가 이전과 크게 다를 수 있다.
코드에서 작은 부분만 바꿨고, layout에서 바꾸고 싶었던 부분도 작은 부분인데!<br />
이럴때는 .f파일을 봐야 한다. .f파일은 .v파일들을 묶어놓은 파일이다.<br />
그래서 .f파일 열어보면 .v파일들의 경로가 적혀있다.<br />
<br />
이 .f파일을 시뮬레이션에 포함시키지 않아야, 다시 말해 .v파일들을 세트로 묶어놓지 않아야 이상한 곳까지 바뀌는 일이 일어나지 않는다.<br />
<br />
.f파일 중 메모리 파일 위치가 쓰인 것도 있다. 앞에서 언급했듯, 메모리는 메모리 파일(.v)과 데이터 파일(.dat)이다. 메모리 파일 있는 위치에 가서 .dat까지 복사해와야 한다.<br />
<br />
그 뒤에는 discipline을 정해줘야 한다. 로직 영역별로 사용할 전압을 정해주는 과정이다.<br />
<br />
어디어디 cell은 1.8V, 어디어디 cell은 3.3V로 정한다.<br />
<br />
이게 되게 중요한데, 같은 1.2V여도 1.8V discipline에서는 0.9V보다 크니 HIGH로 읽히고, 3.3V discipline에서는 1.65V보다 작으니 LOW로 읽힌다.<br />
<br />
이거만 하면 되는 것이 아니고, connect rule도 정해줘야 한다.<br />
Connect rule 파일에는 1.8V면 실제 연결을 어떻게 해야 하고 3.3V면 어떻게 해야 하는지 적혀있다. 그래서 Vth라거나 이런 값들도 다 적혀있다. Connect rule 파일은 .vams 파일이다.<br />
<br />
Spectre랑 ams는 netlist 만드는 방식이 다르다. Schematic에 digital이 섞이면 ams 써야 한다.<br />
<br />
Config의 view list: schematic에서 한단계씩 내려가며, stop list에 있는 view가 나오면 멈추고 그 view를 쓴다. Verilog -&gt; schematic -&gt; transistor 이런 식이다.<br /></p>]]></content><author><name></name></author><category term="Circuits" /><summary type="html"><![CDATA[Cadence 사람들 왔을 때 얘기: ASIL: Automotive Safety Integrity Level. ASIL-A~D가 있는데, D가 가장 높은 단계다. 자동차 안전 기준은 ISO 26262에 기반한다. USF: Unified Safety Format UPF: Unified Power Format RTL-&gt; Netlist로 Synthsize할 때, 사고 위험 없이 안전하게 합성됐는지 확인하는 기준이 USF다. UPF는 Low power 설계에서 사용되는 기준이다. Cadence의 Legato에서는 회로가 안전한지 확인하기 위해, 회로 내의 모든 Connection을 한번씩 다 끊어본다. 돌리는 데에 연산력이 엄청나게 필요해서, CPU가 여러 개 있어도 시간이 엄청나게 걸린다. 원래 .scs파일, 즉 netlist 파일은 매번 캐시메모리에 저장된다. 근데 여기서는 캐시메모리에 netlist 하나 박아놓고 fault만 달라지게 계속 돌린다. 설마 이런 metal line들도 끊어지겠냐 싶은 line들도 있지만, 자동차는 정말 천만분의1도 놓치면 안돼서 이렇게까지 한다. 근데, 돌릴때 조건을 conservative로 놓는건 조금 신중해야 한다. Conservative 고르면 회로가 만분의 일 오차까지(80dB) 보게 된다. 이러다보면 시간도 엄청 오래 걸리고, 잘 수렴도 안해서 conversion error가 날 수 있다. 캐패시터 전압이 +0.0001에서 -0.0001 사이를 진동한다든가. 그리고, short보다 open이 들어간 회로가 시간이 더 많이 걸린다. Open ~= 커다란 저항 = 작은 전류라서 이 값으로 수렴하는 데에 시간이 오래 걸리기 때문이다. 회로를 끊어보는 방식은 IEEE 2427을 따른다. Cadence에서 이 tool을 광고하는 근거는, 이 tool은 연산을 단순화하기 위해 여러가지 기술들이 적용되어 있다는 점이다. MOSFET aging에 대한 모델은 standard가 없어서, 회사마다 각자 모델을 갖고 있다. 케이던스도 나름의 모델이 있고, 삼성전자, TSMC도 각자의 모델이 있다.]]></summary></entry><entry><title type="html">Depletion MOSFET</title><link href="http://localhost:4000/circuits/2023/10/04/Circuits-Depletion-MOSFET.html" rel="alternate" type="text/html" title="Depletion MOSFET" /><published>2023-10-04T19:31:29+09:00</published><updated>2023-10-04T19:31:29+09:00</updated><id>http://localhost:4000/circuits/2023/10/04/Circuits%20-%20Depletion%20MOSFET</id><content type="html" xml:base="http://localhost:4000/circuits/2023/10/04/Circuits-Depletion-MOSFET.html"><![CDATA[<p>MOSFET에 대해 이미 배우긴 했지만, MOSFET에는 Enhancement mode MOSFET과 Depletion mode MOSFET이 있다.<br />
Enhancement mode MOSFET이 우리가 원래 아는 MOSFET이고,<br />
Depletion mode MOSFET은 channel이 생겨날 위치에 n-type dopant implant를 박아서 channel을 미리 만들어놓은 MOSFET이다.<br />
<br />
그래서 Vgs=0일 때, Enhancement MOSFET이면 당연히 MOSFET이 꺼져있다. Vgs가 Vth보다 작아서 채널이 안생기니까.<br />
근데 depletion mode MOSFET이면 Vgs를 마이너스로 걸어야 겨우겨우 채널이 사라져 MOSFET이 꺼진다. 즉, Vth가 마이너스다. 그래서 NMOS긴 한데 Vth가 마이너스인 NMOS가 된다.<br />
<br />
Native MOSFET이라는 것도 있다. Native면 특성이 Enhancement와 Depletion 사이라서, Vth~=0인 MOSFET을 말한다.<br />
우리가 아는 NMOS는 P-well 위에 fabricate하는데, Native NMOS는 약하게 도핑된 p-type silicon 위에 fabricate한다. 당연히, 비교하자면 p-well의 농도가 더 높을 것이다.<br />
<br />
그래서, p-type silicon위에 fabricate할때는 bulk에 상대적으로 hole이 적은 상태가 된다. 그래서 채널이 훨씬 쉽게 생긴다! 결국 Vth가 낮다고 말할 수 있다.<br />
이 방식으로 Vth~=0까지 가면 Native MOSFET이 된다.<br />
<br />
Vth 낮으면 좋은거 아닌가? Native MOSFET은 n-well이나 p-well 위에 만들어진 MOSFET들보다 conductivity가 낮다. 그래서 같은 conductivity를 얻으려고 해도, native MOSFET은 일반 MOSFET들보다 크기가 더 커야 한다.<br />
<br />
Depletion load NMOS Logic이라는게 있다. Logic gate들 만드는 방식 중 하나인건데, 이 방식은 depletion-mode NMOS를 Current Source로 만들어 쓴다. Depletion MOSFET은 다른 MOSFET들보다 더 우수한 current source로서 동작할 수 있기 때문이다.<br />
<br />
인텔이 HMOS라고 부르는 process가 depletion-load NMOS process다.<br /></p>]]></content><author><name></name></author><category term="Circuits" /><summary type="html"><![CDATA[MOSFET에 대해 이미 배우긴 했지만, MOSFET에는 Enhancement mode MOSFET과 Depletion mode MOSFET이 있다. Enhancement mode MOSFET이 우리가 원래 아는 MOSFET이고, Depletion mode MOSFET은 channel이 생겨날 위치에 n-type dopant implant를 박아서 channel을 미리 만들어놓은 MOSFET이다. 그래서 Vgs=0일 때, Enhancement MOSFET이면 당연히 MOSFET이 꺼져있다. Vgs가 Vth보다 작아서 채널이 안생기니까. 근데 depletion mode MOSFET이면 Vgs를 마이너스로 걸어야 겨우겨우 채널이 사라져 MOSFET이 꺼진다. 즉, Vth가 마이너스다. 그래서 NMOS긴 한데 Vth가 마이너스인 NMOS가 된다. Native MOSFET이라는 것도 있다. Native면 특성이 Enhancement와 Depletion 사이라서, Vth~=0인 MOSFET을 말한다. 우리가 아는 NMOS는 P-well 위에 fabricate하는데, Native NMOS는 약하게 도핑된 p-type silicon 위에 fabricate한다. 당연히, 비교하자면 p-well의 농도가 더 높을 것이다. 그래서, p-type silicon위에 fabricate할때는 bulk에 상대적으로 hole이 적은 상태가 된다. 그래서 채널이 훨씬 쉽게 생긴다! 결국 Vth가 낮다고 말할 수 있다. 이 방식으로 Vth~=0까지 가면 Native MOSFET이 된다. Vth 낮으면 좋은거 아닌가? Native MOSFET은 n-well이나 p-well 위에 만들어진 MOSFET들보다 conductivity가 낮다. 그래서 같은 conductivity를 얻으려고 해도, native MOSFET은 일반 MOSFET들보다 크기가 더 커야 한다. Depletion load NMOS Logic이라는게 있다. Logic gate들 만드는 방식 중 하나인건데, 이 방식은 depletion-mode NMOS를 Current Source로 만들어 쓴다. Depletion MOSFET은 다른 MOSFET들보다 더 우수한 current source로서 동작할 수 있기 때문이다. 인텔이 HMOS라고 부르는 process가 depletion-load NMOS process다.]]></summary></entry><entry><title type="html">EMMI</title><link href="http://localhost:4000/circuits/2023/10/04/Circuits-EMMI.html" rel="alternate" type="text/html" title="EMMI" /><published>2023-10-04T19:31:29+09:00</published><updated>2023-10-04T19:31:29+09:00</updated><id>http://localhost:4000/circuits/2023/10/04/Circuits%20-%20EMMI</id><content type="html" xml:base="http://localhost:4000/circuits/2023/10/04/Circuits-EMMI.html"><![CDATA[<p>Leakage current가 많이 나올 때는 EMMI라는 장치로 IC를 살펴봐야 한다.<br />
EMMI: Emission Microscope<br />
<br />
EMMI로 IC를 분석해보려면, 일단 위쪽 패키징을 없애야 한다. 이렇게 패키징 없애는걸 decap이라 한다. Decapsulation인 듯 하다.<br />
<br />
패키징 종류는 그림이랑 같이.<br />
<br />
DW7601에서 사용한건 QFN이었다. 이 패키징의 윗면을 화학약품을 쓰든 Decap장비를 쓰단 해서 없애고 EMMI로 IC를 관찰한다.<br />
EMMI를 쓰는 경우는 원인이 뭐든간에 IC에 불량이 있는 경우다. 그래서 EMMI를 쓸 때는 IC에 전원도 넣고 필요한 벡터도 넣어서 고장 현상을 재현한다. 그러면 불량 위치에서 비정상적인 열이나 빛이 나오고, EMMI는 이걸 보는거다.<br />
<br />
그래서 측정 전에 decap을 해줘야 한다. 안그러면 안보인다.<br />
<br />
열을 보는 EMMI는 THEMOS(Thermal Emission Microscope Operating System)이라 하고 THEMOS는 InGaAs 카메라를 쓴다.<br />
<br />
빛을 보는 EMMI는 PHEMOS(Photon Emission Microscope Operating System)이라 하고, PHEMOS는 InSb 카메라를 쓴다.<br />
<br />
그리고 OBIRCH(Optical Beam Induced Resistance Change)라는 방식도 있다. OBIRCH는 LSM(Laser Scanning Microscope)을 쓴다.<br />
<br />
OBRICH는 Seebeck effect(제벡 효과)를 이용한 방식이다. Seebeck effect는 서로 다른 두 종류의 금속을 붙여놓고 한쪽에 열을 가하면 전류가 흐르는 현상이다. 기전력이 발생한다고 봐도 된다. 그래서, OBRICH는 레이저를 쏴서 특정 부분을 가열하고 기전력이 생기는지 확인한다.<br />
<br />
만약 가열했을 때 기전력이 생긴다면, 그 위치에는 서로 다른 금속이 붙어있는 것이니, 거기서 불량이 생겼다는 것을 알 수 있다.<br />
<br />
정밀한건 OBIRCH &gt; PHEMOS &gt; THEMOS인데, OBIRCH는 제약 사항이 좀 많다. 그리고 PHEMOS는 빛을 보는 거라 암실에서 진행되어야 한다. THEMOS는 상관 없다.<br />
<br />
THEMOS: 주로 Metal 관련 불량이 잘 보인다. 열이 나는 원리가 I^2R이니까, metal에 흐르는 전류에 의해 열이 생기기 때문이다. 대표적인 불량으로는 Metal melting, Bridge short, oxide crack, metal particle, migration, contact spike등이 있다.<br />
<br />
열은 InSb 카메라로만 검출할 수 있어서 THEMOS가 InSb 카메라를 쓴다. IC에 전원이랑 신호 넣기 전에 한번 찍고, 전원이랑 신호 넣은 후 찍어서 비교적 뜨거워진 곳을 고장 위치로 판정한다.<br />
<br />
PHEMOS: 주로 gate 관련 불량이 잘 보인다. Photon은 Si layer에서 나온다. 대표적인 불량으로는 Source to Drain leakage, gate leakage, oxidation breakdown, ESD failure, hot carrier, latch-up 등이 있다.<br />
<br />
Photon 검출은 InGaAs 카메라를 이용한다. 이때, photon을 검출해야 하니 외부 빛을 모두 차단한 암실에서 사용한다. 그리고 photon은 트랜지스터가 스위칭될 때 방출되기도 하기 때문에, 정상 sample 한번 찍어보고 이상한 sample 한번 찍어서 비교해야 한다.<br />
<br /></p>]]></content><author><name></name></author><category term="Circuits" /><summary type="html"><![CDATA[Leakage current가 많이 나올 때는 EMMI라는 장치로 IC를 살펴봐야 한다. EMMI: Emission Microscope EMMI로 IC를 분석해보려면, 일단 위쪽 패키징을 없애야 한다. 이렇게 패키징 없애는걸 decap이라 한다. Decapsulation인 듯 하다. 패키징 종류는 그림이랑 같이. DW7601에서 사용한건 QFN이었다. 이 패키징의 윗면을 화학약품을 쓰든 Decap장비를 쓰단 해서 없애고 EMMI로 IC를 관찰한다. EMMI를 쓰는 경우는 원인이 뭐든간에 IC에 불량이 있는 경우다. 그래서 EMMI를 쓸 때는 IC에 전원도 넣고 필요한 벡터도 넣어서 고장 현상을 재현한다. 그러면 불량 위치에서 비정상적인 열이나 빛이 나오고, EMMI는 이걸 보는거다. 그래서 측정 전에 decap을 해줘야 한다. 안그러면 안보인다. 열을 보는 EMMI는 THEMOS(Thermal Emission Microscope Operating System)이라 하고 THEMOS는 InGaAs 카메라를 쓴다. 빛을 보는 EMMI는 PHEMOS(Photon Emission Microscope Operating System)이라 하고, PHEMOS는 InSb 카메라를 쓴다. 그리고 OBIRCH(Optical Beam Induced Resistance Change)라는 방식도 있다. OBIRCH는 LSM(Laser Scanning Microscope)을 쓴다. OBRICH는 Seebeck effect(제벡 효과)를 이용한 방식이다. Seebeck effect는 서로 다른 두 종류의 금속을 붙여놓고 한쪽에 열을 가하면 전류가 흐르는 현상이다. 기전력이 발생한다고 봐도 된다. 그래서, OBRICH는 레이저를 쏴서 특정 부분을 가열하고 기전력이 생기는지 확인한다. 만약 가열했을 때 기전력이 생긴다면, 그 위치에는 서로 다른 금속이 붙어있는 것이니, 거기서 불량이 생겼다는 것을 알 수 있다. 정밀한건 OBIRCH &gt; PHEMOS &gt; THEMOS인데, OBIRCH는 제약 사항이 좀 많다. 그리고 PHEMOS는 빛을 보는 거라 암실에서 진행되어야 한다. THEMOS는 상관 없다. THEMOS: 주로 Metal 관련 불량이 잘 보인다. 열이 나는 원리가 I^2R이니까, metal에 흐르는 전류에 의해 열이 생기기 때문이다. 대표적인 불량으로는 Metal melting, Bridge short, oxide crack, metal particle, migration, contact spike등이 있다. 열은 InSb 카메라로만 검출할 수 있어서 THEMOS가 InSb 카메라를 쓴다. IC에 전원이랑 신호 넣기 전에 한번 찍고, 전원이랑 신호 넣은 후 찍어서 비교적 뜨거워진 곳을 고장 위치로 판정한다. PHEMOS: 주로 gate 관련 불량이 잘 보인다. Photon은 Si layer에서 나온다. 대표적인 불량으로는 Source to Drain leakage, gate leakage, oxidation breakdown, ESD failure, hot carrier, latch-up 등이 있다. Photon 검출은 InGaAs 카메라를 이용한다. 이때, photon을 검출해야 하니 외부 빛을 모두 차단한 암실에서 사용한다. 그리고 photon은 트랜지스터가 스위칭될 때 방출되기도 하기 때문에, 정상 sample 한번 찍어보고 이상한 sample 한번 찍어서 비교해야 한다.]]></summary></entry><entry><title type="html">Kickback Noise</title><link href="http://localhost:4000/circuits/2023/10/04/Circuits-Kickback-Noise.html" rel="alternate" type="text/html" title="Kickback Noise" /><published>2023-10-04T19:31:29+09:00</published><updated>2023-10-04T19:31:29+09:00</updated><id>http://localhost:4000/circuits/2023/10/04/Circuits%20-%20Kickback%20Noise</id><content type="html" xml:base="http://localhost:4000/circuits/2023/10/04/Circuits-Kickback-Noise.html"><![CDATA[<p>Kickback noise:<br />
Kickback noise는 Latch에서 발생하는 noise다. Latched comparator는 latch 구조를 포함하는 comparator인데, positive feedback 구조라서 analog signal을 digital signal로 바꾼다.<br />
<br />
예를 들어, input이 Vref보다 아주 조금 커도 그 차이가 positive feedback에 의해 증폭돼서 출력이 VDD가 되고, input이 Vref보다 아주 조금 작아도 Output은 VSS가 된다. Positive feedback은 차이가 커지는 방향으로 작용하기 때문이다.<br />
<br />
이 positive feedback 때문에, input 전압은 조금만 변해도 output 전압은 크게 변할 수 있다. 이 경우 latch 안 노드들의 dv/dt가 상당히 크다. 이 커다란 dv/dt가 parasitic capacitance에 Cdv/dt만큼 전류가 흐르게 만든다.<br />
<br />
Input 전압을 인가해주는 회로의 Rout이 0이라면 전류가 흘러들어와도 input 전압에 영향이 있지 않았겠지만, Rout이 0이 아니면 이 전류에 의해 input 전압이 달라진다. 이 현상이 kickback noise다.<br />
빠르고 전력 효율이 좋은 comparator일수록 kickback noise가 크게 생긴다.<br />
<br />
Kickback noise 해결방법:<br />
1. Preamplifier를 comparator 앞에 붙인다.<br />
근데 이러면 preamplifier가 power를 먹어 전력효율이 떨어진다.<br />
2. Differential pair의 drain들에 스위치를 달고, latch 전압이 바뀌는 동안 스위치를 열어서 전압 변화가 캐패시턴스에 전달 안되게 한다<br />.
이때는 스위치 열면 IDS=0이 되어 MOSFET들이 Triode region에 처박힌다. 그리고 Drain 전압이 어디에도 연결되지 않아서 맘대로 날뛸 수 있다.<br />
3. Differential Pair의 gate들에 스위치를 달아서 input을 sampling해 넣ㄴ느다. 이러면 input에 의한 dV/dt가 전류를 만들 때 스위치가 열려있어 영향이 없다.<br />
하지만 스위치 닫히는게 어차피 input에 영향을 준다.<br />
<br />
몇가지 방법이 더 있다고는 하는데, 일단 kickback noise가 뭔지는 확인했으니 다음에 더 알아보자. 내용출처는 ‘Kickback noise reduction techniques for CMOS latched comparators’<br /></p>]]></content><author><name></name></author><category term="Circuits" /><summary type="html"><![CDATA[Kickback noise: Kickback noise는 Latch에서 발생하는 noise다. Latched comparator는 latch 구조를 포함하는 comparator인데, positive feedback 구조라서 analog signal을 digital signal로 바꾼다. 예를 들어, input이 Vref보다 아주 조금 커도 그 차이가 positive feedback에 의해 증폭돼서 출력이 VDD가 되고, input이 Vref보다 아주 조금 작아도 Output은 VSS가 된다. Positive feedback은 차이가 커지는 방향으로 작용하기 때문이다. 이 positive feedback 때문에, input 전압은 조금만 변해도 output 전압은 크게 변할 수 있다. 이 경우 latch 안 노드들의 dv/dt가 상당히 크다. 이 커다란 dv/dt가 parasitic capacitance에 Cdv/dt만큼 전류가 흐르게 만든다. Input 전압을 인가해주는 회로의 Rout이 0이라면 전류가 흘러들어와도 input 전압에 영향이 있지 않았겠지만, Rout이 0이 아니면 이 전류에 의해 input 전압이 달라진다. 이 현상이 kickback noise다. 빠르고 전력 효율이 좋은 comparator일수록 kickback noise가 크게 생긴다. Kickback noise 해결방법: 1. Preamplifier를 comparator 앞에 붙인다. 근데 이러면 preamplifier가 power를 먹어 전력효율이 떨어진다. 2. Differential pair의 drain들에 스위치를 달고, latch 전압이 바뀌는 동안 스위치를 열어서 전압 변화가 캐패시턴스에 전달 안되게 한다. 이때는 스위치 열면 IDS=0이 되어 MOSFET들이 Triode region에 처박힌다. 그리고 Drain 전압이 어디에도 연결되지 않아서 맘대로 날뛸 수 있다. 3. Differential Pair의 gate들에 스위치를 달아서 input을 sampling해 넣ㄴ느다. 이러면 input에 의한 dV/dt가 전류를 만들 때 스위치가 열려있어 영향이 없다. 하지만 스위치 닫히는게 어차피 input에 영향을 준다. 몇가지 방법이 더 있다고는 하는데, 일단 kickback noise가 뭔지는 확인했으니 다음에 더 알아보자. 내용출처는 ‘Kickback noise reduction techniques for CMOS latched comparators’]]></summary></entry><entry><title type="html">PVT Corners</title><link href="http://localhost:4000/circuits/2023/10/04/Circuits-PVT-Corners.html" rel="alternate" type="text/html" title="PVT Corners" /><published>2023-10-04T19:31:29+09:00</published><updated>2023-10-04T19:31:29+09:00</updated><id>http://localhost:4000/circuits/2023/10/04/Circuits%20-%20PVT%20Corners</id><content type="html" xml:base="http://localhost:4000/circuits/2023/10/04/Circuits-PVT-Corners.html"><![CDATA[<p>PVT Corners:<br />
PVT는 각각 Process, Voltage, Temperature다. 우리가 설계를 해서 IC를 찍어내는데, 공정 과정에서 조금씩 다르게 만들어지고, 동작할 때 걸리는 전압도 조금씩 다르고, 동작하는 온도도 조금씩 다를거다. 그래서 이 variation들을 모아 PVT variation이라고 부르고, PVT variation의 극단적인 경우들을 PVT Corner라 부른다.<br />
<br />
Process:<br />
Process variation은 fabrication 과정에서 트랜지스터 안 parameter들이 조금씩 다르게 만들어지는걸 말한다. Die 하나를 만들어도 die 한가운데랑 die 가장자리에서 트랜지스터 특성이 다르다.<br />
<br />
Vth는 doping concentration, surface potential, channel length, oxide thickness, 온도, Source-to-Body voltage, implant impurity 등에 의해 결정되기 때문에, die 안에서도 트랜지스터마다 Vth가 다를 수 있다. 당연히, W,L도 조금씩 다르다.<br />
<br />
이때, 더 작은 트랜지스터는 더 작은 parasitic capacitance를 가지고, propagation delay는 RC delay기 때문에 결국 더 작은 트랜지스터가 더 빠르다. 설계대로의 트랜지스터 속도를 T(Typical), 설계보다 빠른걸 F(Fast), 설계보다 느린걸 S(Slow)라 하면:<br />
(PMOS, NMOS corners)<br />
이렇게 Process corner들을 그릴 수 있다. Process variation 때문에 회로 속도가 변한다면 이 범위안에서 변하는구나 생각하면 된다. 이때 SF, FS corner는 skewed corner라 부른다.<br />
<br />
그럼 빠른게 무조건 좋은거 아닌가? 그건 아니고, speed best case인 FF는 power worst case다. 그니까 전류 소모가 크다. 결국 speed와 current는 tradeoff 관계에 있다.<br />
<br />
전류가 증가하면 gm이 증가해서 저항이 감소한 효과가 나 RC delay가 줄어들어서 같다 라고 적혀있는데, 그런가?<br />
<br />
반대로, SS corner는 speed worst case고 power best case다.<br />
<br />
Voltage:<br />
IC 설계상 특정 전압에서 동작하게 만들긴 헀을텐데, 실제로 IC 쓸때는 설계랑 조금 다른 전압이 들어올 수 있다. 설계보다 조금 더 높은 전압이 들어오면 설계보다 빨라지겠지만 power를 많이 쓰게 되고, iej 낮은 전압이 들어오면 느린 대신 power는 덜 먹는다.<br />
<br />
전압이 다르게 들어올 가능성은 여러가지다 연결된 회로가 복잡해서 IR drop이 많이 생길수도 있고, parasitic R,L,C가 영향을 줄 수도 있다. 전류 변화가 parasitic inductance를 통해 voltage bounce를 만들 수도 있다.<br />
이런 이유들로 걸리는 전압이 바뀌면 안에 흐르는 전류가 바뀔거고, 결국 전체 동작 속도가 바뀔거다.<br />
<br />
밖에서 걸어주는 전압이 설계대로라고 해도, 내부 metal이 조금식 다르게 만들어지기 때문에 내부 트랜지스터에 걸리는 전압은 또 조금씩 차이날 수 있다. Metal을 통해 전압이 전달되니까.<br />
<br />
Power pin으로부터 멀리 떨어진 트랜지스터는 전압이 pin에서 트랜지스터까지 metal을 통해 전달되기 때문에 큰 IR drop을 겪은 전압을 받는다. 그래서 power pin과 가까운 트랜지스터와 먼 트랜지스터에 걸리는 전압이 다르고, 결국 속도도 다르다.<br />
<br />
일반적으로, 전압이 높을수록 트랜지스터가 빨라진다.<br />
<br />
Temperature:<br />
한 IC 내에서 트랜지스터의 밀도가 모두 균일하지는 않다. 트랜지스터가 더 많은 곳에서는 switching이 더 많이 일어나고, 열도 더 많이 날 것이다. 그래서 IC 내에서도 위치에 따라 온도가 다른데, 문제는 온도에 따라 트랜지스터 속도가 바뀐다는 거다.<br />
<br />
트랜지스터는 원래 온도가 증가하면 느려지지만, 나노미터 수준으로 트랜지스터가 작아지면 temperature inversion이란 현상이 발생해서 이때는 온도가 증가할 때 트랜지스터가 빨라진다.<br />
<br />
Switching이 많을수록 power consumption이 크다. Switching에 의한 power dissipation은 연결된 parasitic capacitance와 load capacitance를 채우려고 전류가 흐르다가 발생한다.<br />
<br />
Short-circuit power dissipation은 rise time과 falling time때문이라는데, 왜인지는 일단 이게 뭔지부터 알아봐야겠다.<br />
<br />
Leakage power consumption은 당연히 leakage current 때문이다.<br />
<br />
하여간 이런 이유로 열이 생겨서 온도가 올라가 트랜지스터 속도가 변한다.<br />
<br />
온도가 올라가면 트랜지스터 말고 metal도 영향받는다. 그래서 metal의 저항이 증가한다.<br />
<br />
온도가 올라가면 트랜지스터의 mobility가 감소하고, threshold voltage도 감소한다. Mobility가 감소하면 전자, hole의 이동속도가 느려져서 트랜지스터가 느려지고, threshold voltage가 감소하면 같은 전압으로 더 많은 전류가 흘러서 트랜지스터가 빨라진다. 이 두가지 효과가 충돌해서 온도에 따라 어떤 효과가 더 큰지가 다르다.<br />
<br />
그래서, FFF TTT SSS같이 3글자 코너는 PVT variation에서 각각 하나씩 가져온거다. Process도 fast, Voltage도 fast, Temperature도 fast<br />
<br />
근데 FF, TT, SS같ㅣ 두글자 코너도 가끔 보인다. 이건 process corner들만 얘기하는거다. 4글자 코너면 process corner 2자리랑 V,T 각 1자리다.
동운아나텍에서는 corner별로 자기만의 기준으로 묶어뒀다. 첫번째가 MOS, 두번째가 R+C, 세번째가 BJT 이런식으로<br /></p>]]></content><author><name></name></author><category term="Circuits" /><summary type="html"><![CDATA[PVT Corners: PVT는 각각 Process, Voltage, Temperature다. 우리가 설계를 해서 IC를 찍어내는데, 공정 과정에서 조금씩 다르게 만들어지고, 동작할 때 걸리는 전압도 조금씩 다르고, 동작하는 온도도 조금씩 다를거다. 그래서 이 variation들을 모아 PVT variation이라고 부르고, PVT variation의 극단적인 경우들을 PVT Corner라 부른다. Process: Process variation은 fabrication 과정에서 트랜지스터 안 parameter들이 조금씩 다르게 만들어지는걸 말한다. Die 하나를 만들어도 die 한가운데랑 die 가장자리에서 트랜지스터 특성이 다르다. Vth는 doping concentration, surface potential, channel length, oxide thickness, 온도, Source-to-Body voltage, implant impurity 등에 의해 결정되기 때문에, die 안에서도 트랜지스터마다 Vth가 다를 수 있다. 당연히, W,L도 조금씩 다르다. 이때, 더 작은 트랜지스터는 더 작은 parasitic capacitance를 가지고, propagation delay는 RC delay기 때문에 결국 더 작은 트랜지스터가 더 빠르다. 설계대로의 트랜지스터 속도를 T(Typical), 설계보다 빠른걸 F(Fast), 설계보다 느린걸 S(Slow)라 하면: (PMOS, NMOS corners) 이렇게 Process corner들을 그릴 수 있다. Process variation 때문에 회로 속도가 변한다면 이 범위안에서 변하는구나 생각하면 된다. 이때 SF, FS corner는 skewed corner라 부른다. 그럼 빠른게 무조건 좋은거 아닌가? 그건 아니고, speed best case인 FF는 power worst case다. 그니까 전류 소모가 크다. 결국 speed와 current는 tradeoff 관계에 있다. 전류가 증가하면 gm이 증가해서 저항이 감소한 효과가 나 RC delay가 줄어들어서 같다 라고 적혀있는데, 그런가? 반대로, SS corner는 speed worst case고 power best case다. Voltage: IC 설계상 특정 전압에서 동작하게 만들긴 헀을텐데, 실제로 IC 쓸때는 설계랑 조금 다른 전압이 들어올 수 있다. 설계보다 조금 더 높은 전압이 들어오면 설계보다 빨라지겠지만 power를 많이 쓰게 되고, iej 낮은 전압이 들어오면 느린 대신 power는 덜 먹는다. 전압이 다르게 들어올 가능성은 여러가지다 연결된 회로가 복잡해서 IR drop이 많이 생길수도 있고, parasitic R,L,C가 영향을 줄 수도 있다. 전류 변화가 parasitic inductance를 통해 voltage bounce를 만들 수도 있다. 이런 이유들로 걸리는 전압이 바뀌면 안에 흐르는 전류가 바뀔거고, 결국 전체 동작 속도가 바뀔거다. 밖에서 걸어주는 전압이 설계대로라고 해도, 내부 metal이 조금식 다르게 만들어지기 때문에 내부 트랜지스터에 걸리는 전압은 또 조금씩 차이날 수 있다. Metal을 통해 전압이 전달되니까. Power pin으로부터 멀리 떨어진 트랜지스터는 전압이 pin에서 트랜지스터까지 metal을 통해 전달되기 때문에 큰 IR drop을 겪은 전압을 받는다. 그래서 power pin과 가까운 트랜지스터와 먼 트랜지스터에 걸리는 전압이 다르고, 결국 속도도 다르다. 일반적으로, 전압이 높을수록 트랜지스터가 빨라진다. Temperature: 한 IC 내에서 트랜지스터의 밀도가 모두 균일하지는 않다. 트랜지스터가 더 많은 곳에서는 switching이 더 많이 일어나고, 열도 더 많이 날 것이다. 그래서 IC 내에서도 위치에 따라 온도가 다른데, 문제는 온도에 따라 트랜지스터 속도가 바뀐다는 거다. 트랜지스터는 원래 온도가 증가하면 느려지지만, 나노미터 수준으로 트랜지스터가 작아지면 temperature inversion이란 현상이 발생해서 이때는 온도가 증가할 때 트랜지스터가 빨라진다. Switching이 많을수록 power consumption이 크다. Switching에 의한 power dissipation은 연결된 parasitic capacitance와 load capacitance를 채우려고 전류가 흐르다가 발생한다. Short-circuit power dissipation은 rise time과 falling time때문이라는데, 왜인지는 일단 이게 뭔지부터 알아봐야겠다. Leakage power consumption은 당연히 leakage current 때문이다. 하여간 이런 이유로 열이 생겨서 온도가 올라가 트랜지스터 속도가 변한다. 온도가 올라가면 트랜지스터 말고 metal도 영향받는다. 그래서 metal의 저항이 증가한다. 온도가 올라가면 트랜지스터의 mobility가 감소하고, threshold voltage도 감소한다. Mobility가 감소하면 전자, hole의 이동속도가 느려져서 트랜지스터가 느려지고, threshold voltage가 감소하면 같은 전압으로 더 많은 전류가 흘러서 트랜지스터가 빨라진다. 이 두가지 효과가 충돌해서 온도에 따라 어떤 효과가 더 큰지가 다르다. 그래서, FFF TTT SSS같이 3글자 코너는 PVT variation에서 각각 하나씩 가져온거다. Process도 fast, Voltage도 fast, Temperature도 fast 근데 FF, TT, SS같ㅣ 두글자 코너도 가끔 보인다. 이건 process corner들만 얘기하는거다. 4글자 코너면 process corner 2자리랑 V,T 각 1자리다. 동운아나텍에서는 corner별로 자기만의 기준으로 묶어뒀다. 첫번째가 MOS, 두번째가 R+C, 세번째가 BJT 이런식으로]]></summary></entry><entry><title type="html">보안칩</title><link href="http://localhost:4000/circuits/2023/10/04/Circuits-%EB%B3%B4%EC%95%88%EC%B9%A9.html" rel="alternate" type="text/html" title="보안칩" /><published>2023-10-04T19:31:29+09:00</published><updated>2023-10-04T19:31:29+09:00</updated><id>http://localhost:4000/circuits/2023/10/04/Circuits%20-%20%EB%B3%B4%EC%95%88%EC%B9%A9</id><content type="html" xml:base="http://localhost:4000/circuits/2023/10/04/Circuits-%EB%B3%B4%EC%95%88%EC%B9%A9.html"><![CDATA[<p>보안 칩의 원리는 해킹 시도시 랜덤한 값들이 계속 읽히게 만드는거다. 보안은 꽤 중요하다. 삼성전자는 중국에서 칩 베껴가는걸 걱정하고, 캐논도 토너 팔아서 먹고살아야 하는데 토너를 중국에서 베껴가서 걱정이 많다고 한다.<br />
테슬라 차는 카드키로 여는데, 이걸 또 카드키 작동할 때 옆에서 전파 읽고 그거대로 전파 나오게 해서 차 훔치는게 가능하다고 한다. 유튜브 영상 확인해보자.<br /></p>]]></content><author><name></name></author><category term="Circuits" /><summary type="html"><![CDATA[보안 칩의 원리는 해킹 시도시 랜덤한 값들이 계속 읽히게 만드는거다. 보안은 꽤 중요하다. 삼성전자는 중국에서 칩 베껴가는걸 걱정하고, 캐논도 토너 팔아서 먹고살아야 하는데 토너를 중국에서 베껴가서 걱정이 많다고 한다. 테슬라 차는 카드키로 여는데, 이걸 또 카드키 작동할 때 옆에서 전파 읽고 그거대로 전파 나오게 해서 차 훔치는게 가능하다고 한다. 유튜브 영상 확인해보자.]]></summary></entry><entry><title type="html">Electromagnetics (1)</title><link href="http://localhost:4000/electromagnetics/2023/10/04/Electromagnetics-1.html" rel="alternate" type="text/html" title="Electromagnetics (1)" /><published>2023-10-04T19:31:29+09:00</published><updated>2023-10-04T19:31:29+09:00</updated><id>http://localhost:4000/electromagnetics/2023/10/04/Electromagnetics%20-%201</id><content type="html" xml:base="http://localhost:4000/electromagnetics/2023/10/04/Electromagnetics-1.html"><![CDATA[<p>Under test
\(\frac{-b\pm\sqrt{b^2-4ac}}{2a}\)<br />
\(\nabla_\boldsymbol{x} J(\boldsymbol{x})\)</p>]]></content><author><name></name></author><category term="Electromagnetics" /><summary type="html"><![CDATA[Under test \(\frac{-b\pm\sqrt{b^2-4ac}}{2a}\) \(\nabla_\boldsymbol{x} J(\boldsymbol{x})\)]]></summary></entry><entry><title type="html">Chip war 내용</title><link href="http://localhost:4000/history/2023/10/04/History-Chip-war-%EB%82%B4%EC%9A%A9.html" rel="alternate" type="text/html" title="Chip war 내용" /><published>2023-10-04T19:31:29+09:00</published><updated>2023-10-04T19:31:29+09:00</updated><id>http://localhost:4000/history/2023/10/04/History%20-%20Chip%20war%20%EB%82%B4%EC%9A%A9</id><content type="html" xml:base="http://localhost:4000/history/2023/10/04/History-Chip-war-%EB%82%B4%EC%9A%A9.html"><![CDATA[<p>Chip war 내용 정리:<br />
2차대전까지는 강철과 알루미늄으로, 냉전때는 핵 개수로 승부했다면 현대 사회에서는 국가들이 computing power, 즉 연산력으로 승부한다.<br />
아시아 국가들은 지난 50년간 반도체 흐름을 타고, 실리콘을 발판으로 부상했다.<br />
아이폰에 들어가는 배터리, 블루투스, 와이파이, 통신, 오디오, 카메라 관리는 모두 다른 칩들이 한다. 메모리 칩은 일본의 키오시아, 무선 주파수 인식(Radiofrequency identification)칩은 캘리포니아의 skyworks, 오디오칩은 오스틴의 Cirrus Logic이 만든다.<br />
아이폰의 운영체제가 돌아가는 프로세서는 애플이 설계하긴 하지만, TSMC에서 만든다. 아이폰 12S에는 개당 118억개정도 되는 트랜지스터들이 들어간다.<br />
<br />
ARM은 일본 소프트뱅크에 인수된 영국회사인데, 연구소가 캘리포니아랑 이스라엘에 있다.<br />
<br />
칩 테스트는 동남아시아에서 많이 한다.<br />
<br />
OPEC도 세계 석유 40%를 갖고 있을 뿐이다. 경제 분야 중 이렇게 소수 기업들이 이것저것 독점하고 있는 분야는 반도체뿐이다.<br />
<br />
에니악에는 진공관 18,000개가 들어갔다. 즉 스위치 18,000개가 들어갔다. 진공관은 작동할 때 전구처럼 빛나기 때문에, 당시 벌레가 많이 꼬였다. 그래서 주기적으로 ‘debugging’을 해줘야 했다.<br />
<br />
벨 연구소는 뉴저지에 있었다. AT&amp;T는 전화 회사였기 때문에, 트랜지스터를 스위치보다는 증폭기로 생각했다.<br />
<br />
TI는 2차대전때 잠수함 탐지용 초음파 장비를 만들어 팔았고, 냉전때는 미국 정부에 IC 많이 팔아 부자가 되었다.<br />
<br />
트랜지스터 관련해서 노벨상 받은 사람들:<br />
John Bardeen은 2번, William Shockley도 1번<br />
<br />
Minuteman: 미국-우주-모스크바 상정한 궤도 진입 미사일<br />
<br />
TI에서 처음 리소그래피로 회로 그릴때는 코닥의 감광액을 썼는데, 그냥 쓰기에는 감광액의 순도가 부족해서 원심분리기로 감광액을 재처리해 썼다.<br />
<br />
Morris Chang(모리스 창)은 TSMC 창업자인데, 중국 본토 출신이고 2차대전까지 중국 살다가 국공내전때 탈출했다. 홍콩을 거쳐 미국으로 갔고, 처음에는 하버드 영문학과 다니다가 MIT 기계공학과로 옮겼다.<br />
<br />
졸업 후에는 Sylvania라는 회사에 갔다가 TI로 갔고, TI의 수율을 엄청나게 끌어올렸다.<br />
<br />
쇼클리는 노벨상까지 받은 사람이었지만, 사업은 결국 잘 안됐다. 진짜 산업을 이끈건 시간 갈아넣으면서 수율 개선한 사람들이었다.<br />
<br />
2022년 기준으로,<br />
한국은 모든 메모리 칩의 44%, 모든 프로세서 칩의 8%를 생산한다.<br />
일본은 모든 종류의 칩의 17%를 생산한다.<br />
대만은 모든 프로세서 칩의 41%, 최첨단 칩의 90%를 생산한다.<br />
싱가포르는 모든 종류 칩의 5%를, 중국은 15%를 생산한다.<br />
<br />
소련은 미국 반도체를 베끼려고 했는데, 이게 핵무기 베끼는것까지는 됐는데 반도체 베끼는 데에는 실패했다. 소련의 장점은 품질이 아니라 물량이었는데, 반도체는 품질이 너무나 중요하다.<br />
<br />
소련에 훌륭한 과학자들을 많았지만, 공정에는 문서로 정리되지 않은 부분들도 많이 필요했고, 그 모든걸 스파이가 훔쳐다줄수는 없었다. 그래서 공정이 불가능했고, 어찌저찌 하더라도 수율이 안좋았다.<br />
<br />
1962년 11월, 일본의 이케다 하야토 총리가 프랑스 가서 샤를드골을 만나고, 소니 트랜지스터 라디오를 선물했다.<br />
<br />
1960년대 말, 대만 시급은 19센트, 말레이시아 시급은 15센트, 싱가포르는 11센트, 한국은 10센트였다. 미국은 인건비도 비싼데다가 노조까지 있었다. 그래서 페어차일드 반도체는 반도체 제품 조립을 홍콩에서 했다. 그 뒤 싱가포르도 추가됐다.<br />
<br />
베트남전쟁 이후, 동아시아 반공정권들은 베트남같이 되지 않기 위해, 미국이 자기 나라에 더욱 관심가지게 하려고 노력한다. 그 노력중에는 반도체 공장을 짓는 것도 있었다.<br />
<br />
Fairchild Semiconductor(페어차일드 반도체)는 Gordon Moore가 처음 세웠던 회사다. 이 사람이 두번째로 세운 회사가 인텔이다.<br />
<br />
Intel은 Integrated Electronics의 줄임말이다.<br />
인텔의 첫 제품은 DRAM이었다. 메모리칩은 기기에 맞게 특화될 필요가 없기 때문에 대량생산이 용이하다. 다른 칩들은 기억이 아니라 계산을 해야 해서, 모두 다른 구조로 특별히 설계되어야 했다.<br />
<br />
이때 인텔 생각: 표준화된 로직 칩과 메모리칩이 있으면, 필요한 기능에 해당하는 소프트웨어만 설치하면 될거다. 이 생각이 나중에 cpu로 이어진다.<br />
<br />
HP는 Hewlett-Packard의 약자고, 창업자 2명의 이름이다. 둘 다 스탠포드 출신이다.<br />
<br />
1980년대는 미국 반도체 업계에게 힘든 시기였다. 일본이랑 경쟁해야 했다.<br />
<br />
1980년대에는 인텔, TI뿐 아니라 도시마, NEC같은 일본 회사들도 DRAM을 만들게 됐다. 옛날 일본은 ‘우리가 미국보다 혁신은 느려도 실현은 더 빠르다’라고 하며 미국을 쫓아갔는데, 가전제품 시장을 일본이 먹어치우기 시작하고 1979년에는 워크맨까지 나오며 혁신으로도 미국을 앞질러버렸다.<br />
<br />
미군정이 일본을 키운거긴 하다. 망하게 했다가 공산화되는 것보다는 부하로 잘 키워놓는게 낫다고 판단해서 미군정 이후로도 미국은 일본을 계속 도와줬다.<br />
<br />
일본도 미국에 산업스파이 엄청 보냈다. 일본 정부는 1974년까지 미국 기업이 일본에 팔 수 있는 반도체 개수에 쿼터제를 도입하고 있었다. 그래서 일본 기업들이 미국 시장 먹는동안 미국 기업들은 일본 시장을 먹을 수가 없었다. 일본 정부가 자국 회사들에게 돈을 주기도 했다.<br />
<br />
금리 차이도 컸다. 1980년대 미국은 베트남전쟁때 달러 찍어낸 여파로 생긴 인플레이션에 고통받고 있었다. 기준금리가 높을때는 21.5%까지도 올라갔다고 한다.<br />
<br />
하지만 일본은 사람들이 하도 저축을 많이 해서 은행에 현금이 많았고, 그래서 은행들이 기업들에게 저금리 대출을 많이 해줄 수 있었다. 당시 일본 금리는 6~7%정도였다.<br />
<br />
인텔이 DRAM을 개발한 지 10년 뒤, 인텔의 DRAM 점유율은 1.7%밖에 안되게 되었다. 일본이 DRAM 시장을 다 먹어버렸다! 80년대 내내, 미국 시장에서 일본의 반도체 점유율은 계속 상승했다.<br />
<br />
반도체 공정 쪽도 미국이 그리 앞서나가지 못했다. Photolithography는 현미경 뒤집어서 작은 그림 그리는 데에서 시작했던 만큼 렌즈가 필요한데, 당시 렌즈는 독일의 Carl Zeiss와 일본의 Nikon이 주도했다.<br />
<br />
Stepper라는 장비가 있는데, 웨이퍼 전체에 빛을 쏜느게 아니라 die마다 빛을 쏘게 해주는 장비다. 원래 1978년에 미국 GCA가 만들었지만, 80년대 중반부터는 Nikon에게 시장을 뺏겼다.<br />
<br />
이때쯤만 해도 반도체 공정이 정말 정밀해져서, 천둥이 치면 기압이 변해서 공기 굴절률이 변해 빛이 꺾여 그림이 이상하게 그려질 수 있는 수준이었다.<br />
<br />
1973년, 1979년에 각각 오일쇼크가 있었다. 원인은 OPEC이 감행한 석유수출 통제였다. 당시 아랍 국가들이 이스라엘과 친한 미국을 조지려고 석유 수출을 차단한 것이다. 그 결과 스태그플레이션 등 많은 문제들이 생겼다.<br />
<br />
실리콘밸리 사람들은 미국 정부에 가서, 반도체 일본이 다 먹어치우게 내버려두면 반도체도 석유 꼴 난다고 말하며 좀 도와달라고 했다.<br />
<br />
1986년, 미국 정부가 일본 정부에 항의해 일본은 DRAM 수출량을 제한했다. 하지만 미국 반도체 회사들은 이미 거의 다 뒤진 후였다.<br />
<br />
인텔 창립자 중 하나인 밥 노이스가 미국 정부랑 같이 미국 반도체 회사들좀 살려보려고 노력했다. 특히 당시 니콘, 캐논, ASML을 경쟁사로 갖고 있던 GCA를 어떻게든 살려보려고 많이 노력했지만, 밥 노이스는 1990년에 죽고 GCA도 1993년에 망했다. 미국 내 리소그래피 업계는 이렇게 다 죽어버렸다.<br />
<br />
마이크론은 1978년에 설립됐는데, 이 시기는 미국 DRAM 시장이 일본한테 탈탈 털리던 시기였다. 이때, 마이크론은 3가지 노력을 했다.<br />
<br />
1. DRAM 성능이 좀 별로더라도 가격이 싸도록 설계해서 비용 절감,<br />
2. DRAM 성능이 좀 별로더라도 공정 단순화해서 비용 절감,<br />
3. 일본 반도체 칩에 관세 물려달라고 정부한테 찡찡거리기<br />
<br />
인텔은 DRAM 사업이 박살나긴 했지만, 마이크로프로세서 사업은 아직 살아있었다. 이때쯤 IBM에서 개인용 컴퓨터를 출시했는데, 인텔이 거기 들어갈 칩을 만들었다. 그리고, 인텔은 결국 DRAM을 포기하고 마이크로프로세서에 집중하기로 했다.<br />
<br />
인텔은 직원들 일본 보내서 공정 다 배워오게 하고, 회사 분위기를 기계적으로 바꿨다. 이제 연구소보다는 공장이 됐고, 수율도 오르고 비용도 절감됐다.<br />
<br />
그리고 1985년 플라자 합의로 엔화 가치가 2배가 되어 미국도 수출 경쟁력이 생겼고, 이때쯤 미국 금리도 내려오기 시작했다.<br />
<br />
이렇게 인텔이 PC용 칩, 마이크로소프트가 운영체제 독점한 상태로 컴퓨터 시대가 열렸다.<br />
<br />
삼성이 반도체 사업을 시작하기 전부터, 한국은 미국, 일본 칩의 조립과 패키징을 하는 주요 장소였다. 삼성전자가 성공한건 한국 정부와 미국 기업들의 지원 덕분이었다. 미국 기업들 입장에서는 DRAM 만들어봐야 일본한테 털리니까 삼성전자에 관련기술 던져주고 돈이라도 받는게 나았다. 일본 말고 다른 DRAM 공급원 있으면 좋기도 하고. 이게 1983년이다.<br />
<br />
UCSD의 Andrew Viterbi가 만든 알고리즘 CDMA는 이론상 훌륭하긴 했는데, 연산량이 아주 많았다. 그러다 반도체가 계속 발전중이니 이제 가능해질거다! 라고 생각한 Andrew Viterbi와 Irwin Jacobs가 퀄컴을 창업했다. 이렇게 CDMA를 통해, 주어진 BW 안에 더 많은 신호를 넣을 수 있게 됐다.<br />
<br />
소련은 미국 반도체, 장비들을 계속 훔쳐갔지만 결국 따라잡지는 못했다.<br />
소련의 문제는:<br />
1. 정치적 간섭이 심했고,<br />
2. 시장이 군수시장 뿐이었고,<br />
3. 국제 공급망이 없어서 미국-일본-동아시아 같은 협력이 불가능했다.<br />
<br />
반도체로 강화된 무기는 걸프전에서 볼 수 있었다. 당시 뉴욕타임즈 헤드라인: 강철을 이긴 실리콘<br />
<br />
페이브웨이 폭탄: TI가 만든 유도탄<br />
<br />
일본 기업들은 정부 지원을 계속 받아, 그냥 만들던거 계속 찍어냈다.<br />
<br />
삼성전자, 마이크론 등이 DRAM 시장에 들어와도 그들은 그냥 무지성으로 생산량 더 늘려서 더 많이 찍어냈다.<br />
<br />
소니는 다른 일본 회사들이랑 다르게, DRAM 말고 이미지센서에 투자했다. 그리고 아직까지 그걸로 먹고 산다.<br />
<br />
도시바에서는 마스오카 후지오가 플래시메모리를 만들었는데, 도시바는 발견을 무시했고 결국 그걸 제품으로 개발해 시장에 내놓은 것은 인텔이었다.<br />
<br />
일본 기업들은 DRAM으로 돈을 많이 벌어서 마이크로프로세서 시장을 무시했지만, 컴퓨터 시대가 오자 DRAM보다 마이크로프로세서가 훨씬 중요해졌다.<br />
<br />
1990년에는 고르바초프가 실리콘밸리를 방문하고, 스탠포드에서 강연도 했다. 이렇게 냉전 패배 인정했다.<br />
<br />
1993년부터 미국은 반도체를 다시 수출하기 시작헀고, 1998년에는 삼성전자가 DRAM 최대생산자 자리를 먹었다. 1980년대 말에 90%였던 일본의 시장 점유율은 1998년에는 20%가 됐다.<br />
<br />
대만 입장에서는, 반도체 조립은 동아시아 국가들 모두 하니까 뭔가 더 돈 될만한 다른 산업을 찾아야 했다. 한국처럼 조립에서 생산으로 나아가지 못하면 중국한테 일 다 뺏길 상황이었다.<br />
<br />
대만은 모리스 창을 불러서, 니 하고싶은거 다 하게 해줄 테니까 대만에 반도체 산업 한번 만들어보라고 했다. 모리스 창이 하고 싶었던건 반도체 제조 특화 기업이었다.<br />
<br />
TSMC 설립에 투자한건 대만 정부, 대만 자본가들, 필립스 정도였다. 그마저도 대만 자본가들은 대만 정부에 의해 강제참여 당한거였다.<br />
<br />
실리콘밸리의 작은 팹리스 업체들은 항상 다른 회사 fab을 빌려야 했는데, 그러면서도 항상 기술 도둑맞지 않을까 불안했다. 그래서 그들에게 TSMC가 아주 좋아보였다.<br />
<br />
TSMC는 1987년에 세워졌는데, 화웨이도 런정페이가 1987년에 선전에 세웠다.<br />
<br />
80년대 중국 지도자는 장쩌민이었는데, 상하이교통대 전기공학과 출신이라 그런지 전자기술을 중요시했다.<br />
<br />
DRAM시장을 계속 점유하려면 공정 선폭(technology node)의 연속성을 확보해야 하는데, 여기에 많은 돈이 든다. 삼성전자는 정부의 지원으로 이걸 확보했다.<br />
<br />
Technology node: 해당 공정에서 구현 가능한 최소 선폭<br />
<br />
중국은 반도체 생산이 중요하다고 생각하긴 했는데, 반도체를 생산할 인프라는 없었다. 그러던 중 리처드 창이 2000년에 중국에 SMIC를 설립했고, TSMC를 따라하기 시작했다.<br />
<br />
이런 식으로, TSMC의 경쟁자들이 많아지기 시작했다. SMIC, 싱가포르의 차터드반도체, 대만의 UMC, 대만의 뱅가드반도체, 한국의 삼성전자 등이 경쟁자였다.<br />
<br />
*중국 주석: 마오쩌둥-화궈펑-덩샤오핑-장쩌민-후진타오-시진핑<br />
<br />
1990년대에는 리소그래피의 미래가 불투명한 시대였다. 당시에는 파장을 더 줄여서, DUV를 넘어 EUV를 써야 하는 시대가 왔다. 그런데, EUV 장비 개발은 돈이 정말 엄청나게 드는 일이었다.<br />
<br />
당시 리소그래피 회사는 캐논, 니콘, ASML이 있었다. ASML은 필립스의 리소그래피 부서가 떨어져 나와 생긴 곳이다.<br />
<br />
ASML은 네덜란드 회사기 때문에, 미국 회사들은 일본의 캐논, 니콘보다는 ASML과 거래하는걸 더 선호했다. 그리고 필립스가 TSMC 초기 투자자였기 때문에, ASML은 TSMC라는 확실한 고객을 갖고 성장할 수 있엇다.<br />
<br />
결국 캐논, 니콘은 EUV 장비 개발을 포기했고, ASML만 성공했다.<br />
<br />
CPU가 계산하는 방식을 설정하는 규칙 모음 = CPU architecture<br />
인텔이 만든 아키텍처가 x86이었고, x86이 개인 컴퓨터 CPU의 표준이 되었다.<br />
X86이 최고의 아키텍처라서 시장을 먹었다기보다는, IBM이 만든 최초의 개인용 컴퓨터에서 x86 아키텍처를 썼기 때문이다.<br />
<br />
X86 기반 CPU를 안쓰는 컴퓨터 업체로는 애플이 있었지만, 2006년부터는 애플도 x86 기반 CPU를 쓰기로 했다.<br />
<br />
UC 버클리에서는 RISC라는 아키텍처를 만들었는데, 이 아키텍처가 x86보다 더 효율적이고 가볍다. 그래서 인텔도 x86 버리고 RISC로 옮길까 하다가, 전환 비용이 너무 비싸다고 판단해 그만뒀다. 그래서 지금도 컴퓨터들은 대부분 x86 기반이다.<br />
<br />
인텔은 데이터센터 시장도 그들의 프로세서를 내세워 IBM, HP를 밀어내고 먹어버렸다. 현재 인텔 또는 AMD 프로세서 없이는 데이터센터가 있을 수 없다.<br />
<br />
인텔이 버린 RISC는 1990년 애플이 세운 벤처회사 ARM이 써보기로 했다. ARM은 직접 칩을 설계하지는 않고, 아키텍처 사용권 라이선스만 팹리스 업체들에게 판다.<br />
<br />
하지만 ARM은 인텔의 점유율을 뺏지는 못했다. 인텔 프로세서랑 마이크로소프트 운영체제랑 너무 협력이 강했기 때문이다. 이게 1990~2000년대 이야기다.<br />
<br />
그러다가 휴대용 기기가 많이 나오기 시작하면서, 에너지 효율이 좋은 ARM 프로세서가 인기를 얻게 됐다. 닌텐도 게임기에도 ARM 프로세서가 들어간다.<br />
<br />
인텔은 컴퓨터 시장에서 독점으로 돈 벌며 휴대기기 시장 무시하다가 결국 핸드폰 프로세서 시장을 놓쳐버렸다. 인텔은 쭉 PC용 칩, 서버용 칩만 만들었다.<br />
<br />
애플이 아이폰 만들기 전에 인텔을 찾아가서 핸드폰이 컴퓨터처럼 동작할 수 있게 프로세서 만들어줄 수 있겠냐고 계약을 제시했었는데, 인텔이 계약을 받아들이지 않았다.<br />
<br />
인텔도 나중에는 모바일 칩 제작하려 했지만, 별 성과는 없었다.<br />
<br />
Applied materials: 웨이퍼 위에 얇은 막 씌우는 장비 제조사<br />
Lam Research: Etching 기술력이 최고<br />
KLA: 웨이퍼, 마스크 위 나노미터 단위 오차 찾아내는 장비 제조사<br />
Tokyo Electron도 장비 제조사다.<br />
<br />
2010년대 초, 당시 최신 마이크로프로세서는 개당 10억개의 트랜지스터를 갖고 있었다. 이런 칩을 설계하려면 설계용 소프트웨어가 필요하고, 그런 소프트웨어를 만들 수 있는 곳은 Cadence, Synopsys, Mentor 3곳이었다. 모두 미국회사다.<br />
<br />
2000년대 들어, 많이들 반도체 산업을 3개 영역으로 나누게 되었다.<br />
Logic: 스마트폰, 컴퓨터, 서버를 운영하는 프로세서<br />
Memory: DRAM, 플래시메모리 등<br />
Analog: 시각,음성신호를 디지털 데이터로 치환, 네트워크에 접속하고 통신할 수 있게 해주는 통신 칩, 장비 제어 등<br />
<br />
여기서, 3번째 영역인 아날로그 영역은 무어의 법칙과 무관하다. 즉, 매년 성능이 exponential하게 증가하지 않는다.<br />
<br />
요즘 Analog 칩들은 3/4가 180nm 이상 공정에서 생산된다. 180nm 공정은 1990년대 후반에 나온 공정인데도 말이다.<br />
<br />
그래서 analog칩 분야의 경제 논리는 logic칩, 메모리칩 분야와 다르다. 무조건 트랜지스터 크기를 줄여야 하는 분야가 아닌 것이다.<br />
<br />
그래서 analog칩 만들거면 트랜지스터 크기 줄이려고 미친듯이 경쟁할 필요가 없고, 따라서 비싼 팹을 쓸 필요도 없다. 그렇기에 이익률이 높은 분야다. 대신, 설계 잘하는게 그만큼 중요한 분야다.<br />
<br />
지금 아날로그 칩 업체중 가장 큰 곳은 TI고, 그 밖에도 Onsemi, Skyworks, Analog Device같은 미국 회사들이 있다.<br />
<br />
1990년대 말, 일본 DRAM업체들은 Elpida라는 이름으로 하나의 회사가 되었다. 일본 경제도 안좋았고, 마이크론, 삼성전자, 하이닉스에 맞서기 위해서였다. 하지만 Elpida는 2013년에 마이크론에게 인수되고 말았다.<br />
<br />
이렇게 되어, 마이크론은 미국 뿐 아니라 일본, 대만, 싱가포르에도 팹을 보유하게 됐다. 결국, 이 세상 모든 DRAM은 동아시아에서 만들어진다.<br />
<br />
삼성잔자는 낸드플래시 메모리의 35%를 만든다. 나머지를 일본의 Kioxia, 미국의 마이크론과 웨스턴디지털이 나눠갖는다. 마이크론과 웨스턴디지털도 생산설비가 일본, 싱가포르에 있어서, 결국 낸드플래시 메모리도 다 동아시아에서 만들어진다.<br />
<br />
오늘날, 최신 팹을 갖추려면 200억달러 이상이 든다. 그래서 요즘은 다들 팹리스 회사를 만든다! 팹리스 창업은 수백만 달러면 된다.<br />
<br />
엔비디아는 1993년에 만들어졌다. 엔비디아는 그래픽 연산을 위한 프로세서, GPU들을 만들었다. 그러다가 2006년 CUDA를 내놨다. CUDA를 쓰면 GPU를 그래픽이랑 상관 없는 분야에서도 쓸 수 있다. 즉, 시장이 넓어진다!<br />
<br />
그래서 엔비디아가 CUDA를 열심히 관리한다. 병렬처리가 필요한 곳이면 어디서든 GPU를 쓸 수 있다.<br />
<br />
퀄컴은 1985년에 세워졌다. Quality + Communication = Qualcomm<br />
퀄컴은 CDMA가 성공한 후, 통신 칩 뿐 아니라 아예 AP(Application Processor)를 통째로 만들기 시작했다.<br />
CDMA는 연산이 많이 필요한데, 그걸 가능하게 하는 칩을 만든 것이다.<br />
<br />
FPGA(Field-Programmable Gate Array)하는 회사는 Altera, Xilinx가 있다.<br />
<br />
AMD도 원래 팹이 있었지만, 아부다비 정부에 제조 사업부를 매각했다. 그게 지금의 Global Foundries다.<br />
<br />
2000년대 주안부터는 SiO2 두께가 원자 2개정도가 되어 tunneling이 심해졌다. 그리고 채널 폭도 너무 좁아져서, 전류가 새어나가는 일이 많아졌다.<br />
<br />
그래서 FinFET이 나왔다. FinFET은 전기장을 위에서만 거는게 아니라 옆으로도 걸어서, 전자를 더 잘 제어할 수 있고 전류 누설도 막을 수 있다. 물론, 이런 나노미터 단위 3차원 구조는 엄청난 공정 기술이 필요하다.<br />
<br />
2008년 금융 위기때, 제품이 안팔리니 반도체 업계도 힘들었다. TSMC는 이때, 모리스 창의 주도 하에 모바일 시장 내다보고 투자 엄청나게 헀다.<br />
<br />
1세대 아이폰:<br />
운영체제는 애플이  만든 iOS였지만, 칩 설계와 생산은 삼성전자에서 많이 했다. 그 외에도 인텔의 메모리 칩, Wolfson의 오디오 프로세서, 독일의 Infinion의 무선 네트워크 접속용 모뎀 칩, CSR의 블루투스 칩, Skyworks의 신호 증폭기 등이 들어갔다.<br />
<br />
아이폰 출시 1년 후, 애플은 PA semi라는 에너지 효율 좋은 프로세서를 설계하는 스타트업을 인수하고, 반도체 설계자들을 고용했다.<br />
2년 후, 애플은 A4라는 자체 AP를 만들었다고 발표했다. 아이폰4에 이 A4가 들어갔는데, 아마 이게 짐 켈러 업적일거다.<br />
<br />
애플은 메인 프로세서 뿐 아니라 에어팟같은 주변기기의 보조 칩도 스스로 만든다.<br />
<br />
스마트폰 AP는 설계하는 데에 비용이 많이 든다 그래서 중저가 스마트폰 만드는 회사들은 그냥 퀄컴에서 칩 사온다.<br />
<br />
아이폰에 의해 노키아, 블랙베리같은 회사들은 다 죽어버렸다.<br />
<br />
Foxconn, Wistron같은 대만 기업들은 중국에서 애플 제품 조립 설비를 운영한다.<br />
<br />
EUV 애기가 갑자기 다시 나오는데, 옛날에는 리소그래피에 그냥 가시광선을 이용했다.<br />
근데 가시광선이면 파장이 수백나노미터 정도라서, 회로가 작아지자 한계에 봉착했다.<br />
<br />
그래서, 가시광선보다 파장이 짧은 248nm, 193nm 자외선들을 리소그래피에 쓰기 시작했다.<br />
이렇게 하면 가시광선보다 더 정교한 그림을 그릴 수 있었지만, 여기에도 한계가 있었다.<br />
<br />
그래서, 회사들은 파장 13.5nm EUV(극자외선)을 연구하기 시작했다.<br />
<br />
DUV(심자외선)을 쓸 때는 자외선을 물에 투과시키거나 여러 겹의 마스크에 통과시킴으로써 193nm DUV로 193nm보다 좁은 폭의 패턴을 그렸다.<br />
이 짓거리가 2010년대 중반 3nm FinFET 공정까지 이어졌다! 하지만 그 이상은 이젠 너무 어려웠다.<br />
<br />
TSMC, 삼성전자, 인텔, 글로벌파운드리즈 모두 EUV 도입을 원했다. 글로벌파운드리즈는 2010년 싱가포르의 파운드리업체인 차터드반도체를 인수했고, 2014년에는 IBM 반도체사업부를 인수했다.<br />
IBM이 소프트웨어에만 집중하기로 하면서 팔아버렸거든.<br />
<br />
하지만 EUV개발에는 돈이 너무 많이 들어서, 글로벌파운드리즈는 결국 EUV 경쟁을 포기했다. 이제 삼성전자, TSMC, 인텔밖에 남지 않았다.<br />
<br />
2010년대 실리콘밸리에서, 반도체설계와 제조를 모두 하는 회사는 인텔 뿐이었다. 하지만 둘다 어중간했다.<br />
<br />
2010년대 들어, 데이터센터용 프로세서와 서버용 프로세서가 많이 필요해지면서 인텔 칩이 많이 팔렸다.<br />
아마존 웹서비스, 마이크로소프트 azure, 구글 클라우드 등<br />
<br />
근데, 그 2010년대쯤부터 연산력에 대한 수요가 변하기 시작했다. AI 때문이다.<br />
CPU는 서로 다른 유형의 계산을 수행할 수 있기 때문에 범용성을 가지지만, 그 모든 계산을 순차적으로, 한번에 하나씩 해야 한다.<br />
<br />
하지만 AI는 매번 다른 데이터를 받아서 매번 같은 연산을 하는 것으로 학습된다. 그래서 범용성같은거 필요 없고, 그냥 노가다 잘하는 칩이 있으면 된다.<br />
<br />
GPU는 병렬로 연산을 진행하기 때문에 많은 계산을 동시에 처리할 수 있다. 그래서 AI에 GPU가 많이 쓰이게 되었고, 이게 2010년대 초다.<br />
<br />
엔비디아는 인공지능에 회사의 미래를 걸고, CUDA를 개선하기 위해 엄청나게 노력했다. 그리고 인공지능 뿐 아니라 데이터센터에서도 GPU를 많이 필요로 하게 되어, 엔비디아가 떡상했다.<br />
<br />
그렇다고 엔비디아 미래가 무조건 밝은건 아니다. 클라우드 회사들(아마존, 마이크로소프트, 구글, 텐센트, 알리바바)이 그들 각자의 수요에 맞는 칩을 설계하기 시작했기 때문이다.<br />
<br />
예를 들어, 구글은 구글의 Tensorflow 라이브러리에 최적화된 TPU(Tensor Processing Unit)를 구글 데이터센터에 쓰고 있다.<br />
<br />
하여간, GPU가 훨씬 중요해졌기 때문에 인텔의 데이터센터용 프로세서도 이제 많이 안팔리게 됐다. 결국, 인텔은 반도체 설계한것도 잘 안팔리고, 파운드리는 TSMC, 삼성전자랑 기술 격차가 말도 안되는 수준이다. 그냥 회사가 좀 망했다.<br />
<br />
2020년 기준, 지구상의 EUV장비 중 절반은 TSMC에 있다.<br />
<br />
2020년대, 최첨단 프로세서를 제조할 수 있는 회사는 TSMC와 삼성전자 뿐이다. 근데 둘다 동아시아에 있고, 중국이랑 가까워서 미국이 걱정이 많다.<br />
<br />
중국은 구글, 페이스북을 차단하고 바이두, 텐센트로 그 자리를 대체하고 있다. 애플, 마이크로소프트는 중국 검열에 협조하겠다고 한 뒤 중국 시장에 들어갈 수 있었다.<br />
<br />
2000년대, 2010년대에 중국이 가장 많은 돈을 쓴 수입제품은 석유가 아니라 반도체였다.<br />
<br />
시진핑의 ‘중국제조2025’라는 계획이 있다. 2015년 85%였던 반도체 수입 비중을 2025년에는 30%까지 줄이자는거다.<br />
근데 첨단 팹의 가격은 2014년에 이미 100억달러정도 했다. 그래서 달성하려면 돈이 엄청 들거다.<br />
<br />
2017년, 중국은 2600억달러어치 반도체를 수입했다.<br />
이건 사우디아라비아의 석유 수출이나 독일의 자동차 수출보다 훨씬 많은 금액이다.<br />
<br />
2017년 기준으로, 집적회로는 한국 수출 총액의 15%, 싱가포르 수출 총액의 17%, 말레이시아 수출 총액의 19%, 필리핀 수출 총액의 21%, 대만 수출 총액의 36%를 차지한다. 중국은 이렇게나 큰 시장을 내수화 하려고 하는거다.<br />
이 전자제푸 공금망은 지난 50년간 아시아 경제 성장을 떠받쳐왔다.<br />
<br />
IBM은 미국 정부에 소프트웨어를 많이 팔아왔는데, 에드워드 스노든이란 사람이 모스크바로 망명하며 미국의 첩보작전 관련 문서들을 다 공개해버렸다.
미국 정부의 도청 정황이 드러난 문서들이었는데 그래서 중국 회사들이 IBM 제품들을 구매하지 않게 됐다.<br />
<br />
그래서 IBM은 중국 정부를 찾아가서 반도체 기술좀 줄테니까 우리 제품좀 사달라고 했다. 이게 IBM만 그런게 아니고, 퀄컴, AMD도 기술 협약, 기술 이전을 체결하면서라도 중국 시장에 들어가려고 했다.<br />
이런 식으로, 중국은 반도체 제조 기술을 쌓아가고 있다.<br />
<br />
칭화유니그룹은 칭화대가 설립한 회사로, 표방하는건 대학의 연구를 사업으로 전환하는 것이지만, 실제로는 중국 정부가 시키는 대로 부동산, 반도체에 돈 뿌리는 회사다. 얘네는 해외 반도체 회사들 인수하려고 많은 노력을 했다.<br />
<br />
이병철이 건어물 회사였던 삼성을 키운 방법은:<br />
1. 정부와 좋은 관게를 유지하려고 노력했다.<br />
2. 서양, 일본의 제품 몇개를 골라 그것을 같은 품질에 낮은 가격으로 만드는걸 목표로 했다.<br />
3. 세계화에 적극적이었다.<br />
<br />
중국에서는 화웨이가 텐센트, 알리바바와 달리 초기부터 외국과의 경쟁을 받아들였다. 창업자가 런정페이인데, 런정페이도 이병철처럼 가성비 좋은 버전 만들어서 파는데에 주력했다. 런정페이는 충칭대 출신이고, 1987년에 화웨이 창업했다.<br />
<br />
선전은 외국 투자가 장려되는 곳이라, 런정페이는 선전으로 가서 전화교환기 사업을 시작했다. 그리고 이 기술은 이후 데이터 송수신에 게속 응용됐으며, 현재 무선기지국 분야 3대 사업자는 핀란드의 노키아, 스웨덴의 에릭슨, 중국의 화웨이다.<br />
<br />
화웨이는 매년 150억달러 정도를 연구개발에 쓴다. 이 정도를 연구개발에 쓰는 회사는 구글, 아마존, 폭스바겐 정도다.<br />
이게 가능한 이유는 중국 정부 지원을 받아서도 있다.<br />
<br />
화웨이는 인프라 제공을 넘어 스마트폰 시장까지 들어갔다. 그리고 자사 스마트폰용 반도체 개발도 한다!<br />
<br />
2010년대 말, 화웨이의 HiSilicon 사업부는 TSMC의 두번째로 큰 고객이 됐다. 가장 큰 고객은 애플이다.<br />
어쨌든 화웨이는 무려 스마트폰 프로세서까지 설계하는 회사가 된거다. 이건 엄청난 기술력이다.<br />
<br />
2G폰은 사진을 주고받을 수 있었고, 3G폰은 웹사이트를 열 수 있었으며, 4G폰은 비디오 스트리밍이 가능했다.<br />
<br />
주파수, 그니까 spectrum은 Silicon보다 훨씬 비싸다. 그래서 퀄컴은 송수신되는 데이터를 최적화할 방법을 찾아내고,<br />
아날로그디바이스같은 회사들은 더 정교하게, 더 효율적으로 무선 신호를 주고받을 수 있ㄴ느 RF transceiver들을 만들었다.<br />
<br />
Beamforming: 기지국이 전화기의 위치를 파악한 후, 그쪽으로 전파를 보낸다.<br />
<br />
테슬라도 반도체 설계 분야의 주요 회사중 하나다. 자체 설계한 반도체를 많이 쓴다.<br />
<br />
AI에 중요한건 데이터, 알고리즘, 연산력이다. 이 중 중국이 가지지 못한건 연산력이다.<br />
연산력에 쓰이는 하드웨어 다 미국이 설계하고 대만이 만들기 때문이다.<br />
<br />
아날로그 칩, RF칩은 비싼 fab을 쓸 필요는 없다.<br />
<br />
ZTE: 중국 국영 통신 인프라 업체. 화웨이는 민간 업체다.<br />
<br />
트럼프 취임때쯤, 중국은 미국의 최대 고객이자 최대 경쟁자였다.<br />
<br />
DRAM 시장은 규모의 경제를 필요로 한다. 그래서 삼성전자, 하이닉스, 마이크론같은 대기업들밖에 안남았다.<br />
<br />
현재 반도체 장비 제작사들은 미국(Applied Materials, Lam Research, KLA), 일본, 네덜란드(ASML)이 전부다.<br />
그래서 얘네한테 무역제재당하면 반도체 못만든다.<br />
<br />
푸젠진화반도체(JHICC)가 마이크론 DRAM 기밀 훔쳐가자, 미국이 일본까지 끌어들여 함께 무역제재를 걸어버렸다.<br />
결국 JHICC는 DRAM 생산을 못하게 됐다.<br />
<br />
미국은 동맹국들에게 5G네트워크에서 화웨이를 손절하라고 말햇다. 호주, 폴란드, 프랑스 등은 미국 말대로 완전 손절했는데,<br />
독일은 자동차 시장때문에 눈치를 봤고 영국은 아예 손절을 안했다.<br />
<br />
2020년, 미국은 화웨이를 패기로 했다. 일단 미국산 칩을 화웨이에 수출 못하게 헀다.<br />
하지만 화웨이는 칩 설계 역량이 있엇기 때문에, TSMC만 안막히면 큰 문제 없었다.<br />
<br />
그래서 2020년 5월에는 모든 미국산 반도체 관련 제품 수출을 막았다.<br />
미국 장비가 없으면 TSMC라고 해도 칩을 만들어줄 수가 없다!<br />
이렇게 되자 영국도 화웨이를 손절했다.<br />
<br />
그렇다고 중국 회사들이 다 망한것은 아니다. 텐센트, 알리바바는 살아있고, SMIC도 첨당 장비는 못사도 공장 계속 굴리고 있고,<br />
화웨이도 첨단 반도체만 못사는거라 4G 네트워크 사업은 게속 하고 있다.<br />
<br />
우한에 YMTC라는 낸드플래시 메모리업체가 있는데, 여기는 코로나 락다운때도 안닫혔다.<br />
정부에서 아예 특별 열차편을 만들어서 회사 오갈 수 있게 해줬다고 한다.<br />
<br />
요즘 ASML에서 만들려는 것은 high-NA EUV다.<br />
NA = Numerical Aperture. 2020년 중반 출시 예정이고, 대당 3억달러쯤 할 예정이다.<br />
<br />
RISC-V는 x86이나 ARM과 달리 open source architecture다.<br />
RISC-V 재단은 지정학적 중립성을 위해 미국에서 스위스로 위치를 옮겼다.<br />
알리바바 등 회사들은 RISC-V에 기바한 프로세서들을 설계하고 있다.<br />
<br />
SMIC 전략: 스마트폰, 데이터센터는 첨단 칩이 필요하지만, 자동차는 그렇지 않다.<br />
그래서, 구세대칩을 찍어내서 첨단기술이 필요하지 않은 전기차에 많이 들어가게 한다.<br />
<br />
중국은 SiC, GaN(질화갈륨) 등 반도체 물질에도 투자한다.<br />
전기차 출력 관리용 반도체에 많이 쓰일 것으로 예상돼서.<br />
중국은 전기차 많이 하는 나라다.<br />
<br />
2020년, 코로나 때문에 자동차 회사들이 반도체 주문을 많이 줄였다.<br />
그러는 동안 사람들은 컴퓨터를 사서 PC, 데이터센터용 칩이 많이 필렸다.<br />
<br />
근데 자동차 수요가 생각보다 빨리 회복돼서, 자동차 회사들이 뒤늦게 반도체를 주문하긴 했지만 주문이 밀려서 고생했다.<br /></p>]]></content><author><name></name></author><category term="History" /><summary type="html"><![CDATA[Chip war 내용 정리: 2차대전까지는 강철과 알루미늄으로, 냉전때는 핵 개수로 승부했다면 현대 사회에서는 국가들이 computing power, 즉 연산력으로 승부한다. 아시아 국가들은 지난 50년간 반도체 흐름을 타고, 실리콘을 발판으로 부상했다. 아이폰에 들어가는 배터리, 블루투스, 와이파이, 통신, 오디오, 카메라 관리는 모두 다른 칩들이 한다. 메모리 칩은 일본의 키오시아, 무선 주파수 인식(Radiofrequency identification)칩은 캘리포니아의 skyworks, 오디오칩은 오스틴의 Cirrus Logic이 만든다. 아이폰의 운영체제가 돌아가는 프로세서는 애플이 설계하긴 하지만, TSMC에서 만든다. 아이폰 12S에는 개당 118억개정도 되는 트랜지스터들이 들어간다. ARM은 일본 소프트뱅크에 인수된 영국회사인데, 연구소가 캘리포니아랑 이스라엘에 있다. 칩 테스트는 동남아시아에서 많이 한다. OPEC도 세계 석유 40%를 갖고 있을 뿐이다. 경제 분야 중 이렇게 소수 기업들이 이것저것 독점하고 있는 분야는 반도체뿐이다. 에니악에는 진공관 18,000개가 들어갔다. 즉 스위치 18,000개가 들어갔다. 진공관은 작동할 때 전구처럼 빛나기 때문에, 당시 벌레가 많이 꼬였다. 그래서 주기적으로 ‘debugging’을 해줘야 했다. 벨 연구소는 뉴저지에 있었다. AT&amp;T는 전화 회사였기 때문에, 트랜지스터를 스위치보다는 증폭기로 생각했다. TI는 2차대전때 잠수함 탐지용 초음파 장비를 만들어 팔았고, 냉전때는 미국 정부에 IC 많이 팔아 부자가 되었다. 트랜지스터 관련해서 노벨상 받은 사람들: John Bardeen은 2번, William Shockley도 1번 Minuteman: 미국-우주-모스크바 상정한 궤도 진입 미사일 TI에서 처음 리소그래피로 회로 그릴때는 코닥의 감광액을 썼는데, 그냥 쓰기에는 감광액의 순도가 부족해서 원심분리기로 감광액을 재처리해 썼다. Morris Chang(모리스 창)은 TSMC 창업자인데, 중국 본토 출신이고 2차대전까지 중국 살다가 국공내전때 탈출했다. 홍콩을 거쳐 미국으로 갔고, 처음에는 하버드 영문학과 다니다가 MIT 기계공학과로 옮겼다. 졸업 후에는 Sylvania라는 회사에 갔다가 TI로 갔고, TI의 수율을 엄청나게 끌어올렸다. 쇼클리는 노벨상까지 받은 사람이었지만, 사업은 결국 잘 안됐다. 진짜 산업을 이끈건 시간 갈아넣으면서 수율 개선한 사람들이었다. 2022년 기준으로, 한국은 모든 메모리 칩의 44%, 모든 프로세서 칩의 8%를 생산한다. 일본은 모든 종류의 칩의 17%를 생산한다. 대만은 모든 프로세서 칩의 41%, 최첨단 칩의 90%를 생산한다. 싱가포르는 모든 종류 칩의 5%를, 중국은 15%를 생산한다. 소련은 미국 반도체를 베끼려고 했는데, 이게 핵무기 베끼는것까지는 됐는데 반도체 베끼는 데에는 실패했다. 소련의 장점은 품질이 아니라 물량이었는데, 반도체는 품질이 너무나 중요하다. 소련에 훌륭한 과학자들을 많았지만, 공정에는 문서로 정리되지 않은 부분들도 많이 필요했고, 그 모든걸 스파이가 훔쳐다줄수는 없었다. 그래서 공정이 불가능했고, 어찌저찌 하더라도 수율이 안좋았다. 1962년 11월, 일본의 이케다 하야토 총리가 프랑스 가서 샤를드골을 만나고, 소니 트랜지스터 라디오를 선물했다. 1960년대 말, 대만 시급은 19센트, 말레이시아 시급은 15센트, 싱가포르는 11센트, 한국은 10센트였다. 미국은 인건비도 비싼데다가 노조까지 있었다. 그래서 페어차일드 반도체는 반도체 제품 조립을 홍콩에서 했다. 그 뒤 싱가포르도 추가됐다. 베트남전쟁 이후, 동아시아 반공정권들은 베트남같이 되지 않기 위해, 미국이 자기 나라에 더욱 관심가지게 하려고 노력한다. 그 노력중에는 반도체 공장을 짓는 것도 있었다. Fairchild Semiconductor(페어차일드 반도체)는 Gordon Moore가 처음 세웠던 회사다. 이 사람이 두번째로 세운 회사가 인텔이다. Intel은 Integrated Electronics의 줄임말이다. 인텔의 첫 제품은 DRAM이었다. 메모리칩은 기기에 맞게 특화될 필요가 없기 때문에 대량생산이 용이하다. 다른 칩들은 기억이 아니라 계산을 해야 해서, 모두 다른 구조로 특별히 설계되어야 했다. 이때 인텔 생각: 표준화된 로직 칩과 메모리칩이 있으면, 필요한 기능에 해당하는 소프트웨어만 설치하면 될거다. 이 생각이 나중에 cpu로 이어진다. HP는 Hewlett-Packard의 약자고, 창업자 2명의 이름이다. 둘 다 스탠포드 출신이다. 1980년대는 미국 반도체 업계에게 힘든 시기였다. 일본이랑 경쟁해야 했다. 1980년대에는 인텔, TI뿐 아니라 도시마, NEC같은 일본 회사들도 DRAM을 만들게 됐다. 옛날 일본은 ‘우리가 미국보다 혁신은 느려도 실현은 더 빠르다’라고 하며 미국을 쫓아갔는데, 가전제품 시장을 일본이 먹어치우기 시작하고 1979년에는 워크맨까지 나오며 혁신으로도 미국을 앞질러버렸다. 미군정이 일본을 키운거긴 하다. 망하게 했다가 공산화되는 것보다는 부하로 잘 키워놓는게 낫다고 판단해서 미군정 이후로도 미국은 일본을 계속 도와줬다. 일본도 미국에 산업스파이 엄청 보냈다. 일본 정부는 1974년까지 미국 기업이 일본에 팔 수 있는 반도체 개수에 쿼터제를 도입하고 있었다. 그래서 일본 기업들이 미국 시장 먹는동안 미국 기업들은 일본 시장을 먹을 수가 없었다. 일본 정부가 자국 회사들에게 돈을 주기도 했다. 금리 차이도 컸다. 1980년대 미국은 베트남전쟁때 달러 찍어낸 여파로 생긴 인플레이션에 고통받고 있었다. 기준금리가 높을때는 21.5%까지도 올라갔다고 한다. 하지만 일본은 사람들이 하도 저축을 많이 해서 은행에 현금이 많았고, 그래서 은행들이 기업들에게 저금리 대출을 많이 해줄 수 있었다. 당시 일본 금리는 6~7%정도였다. 인텔이 DRAM을 개발한 지 10년 뒤, 인텔의 DRAM 점유율은 1.7%밖에 안되게 되었다. 일본이 DRAM 시장을 다 먹어버렸다! 80년대 내내, 미국 시장에서 일본의 반도체 점유율은 계속 상승했다. 반도체 공정 쪽도 미국이 그리 앞서나가지 못했다. Photolithography는 현미경 뒤집어서 작은 그림 그리는 데에서 시작했던 만큼 렌즈가 필요한데, 당시 렌즈는 독일의 Carl Zeiss와 일본의 Nikon이 주도했다. Stepper라는 장비가 있는데, 웨이퍼 전체에 빛을 쏜느게 아니라 die마다 빛을 쏘게 해주는 장비다. 원래 1978년에 미국 GCA가 만들었지만, 80년대 중반부터는 Nikon에게 시장을 뺏겼다. 이때쯤만 해도 반도체 공정이 정말 정밀해져서, 천둥이 치면 기압이 변해서 공기 굴절률이 변해 빛이 꺾여 그림이 이상하게 그려질 수 있는 수준이었다. 1973년, 1979년에 각각 오일쇼크가 있었다. 원인은 OPEC이 감행한 석유수출 통제였다. 당시 아랍 국가들이 이스라엘과 친한 미국을 조지려고 석유 수출을 차단한 것이다. 그 결과 스태그플레이션 등 많은 문제들이 생겼다. 실리콘밸리 사람들은 미국 정부에 가서, 반도체 일본이 다 먹어치우게 내버려두면 반도체도 석유 꼴 난다고 말하며 좀 도와달라고 했다. 1986년, 미국 정부가 일본 정부에 항의해 일본은 DRAM 수출량을 제한했다. 하지만 미국 반도체 회사들은 이미 거의 다 뒤진 후였다. 인텔 창립자 중 하나인 밥 노이스가 미국 정부랑 같이 미국 반도체 회사들좀 살려보려고 노력했다. 특히 당시 니콘, 캐논, ASML을 경쟁사로 갖고 있던 GCA를 어떻게든 살려보려고 많이 노력했지만, 밥 노이스는 1990년에 죽고 GCA도 1993년에 망했다. 미국 내 리소그래피 업계는 이렇게 다 죽어버렸다. 마이크론은 1978년에 설립됐는데, 이 시기는 미국 DRAM 시장이 일본한테 탈탈 털리던 시기였다. 이때, 마이크론은 3가지 노력을 했다. 1. DRAM 성능이 좀 별로더라도 가격이 싸도록 설계해서 비용 절감, 2. DRAM 성능이 좀 별로더라도 공정 단순화해서 비용 절감, 3. 일본 반도체 칩에 관세 물려달라고 정부한테 찡찡거리기 인텔은 DRAM 사업이 박살나긴 했지만, 마이크로프로세서 사업은 아직 살아있었다. 이때쯤 IBM에서 개인용 컴퓨터를 출시했는데, 인텔이 거기 들어갈 칩을 만들었다. 그리고, 인텔은 결국 DRAM을 포기하고 마이크로프로세서에 집중하기로 했다. 인텔은 직원들 일본 보내서 공정 다 배워오게 하고, 회사 분위기를 기계적으로 바꿨다. 이제 연구소보다는 공장이 됐고, 수율도 오르고 비용도 절감됐다. 그리고 1985년 플라자 합의로 엔화 가치가 2배가 되어 미국도 수출 경쟁력이 생겼고, 이때쯤 미국 금리도 내려오기 시작했다. 이렇게 인텔이 PC용 칩, 마이크로소프트가 운영체제 독점한 상태로 컴퓨터 시대가 열렸다. 삼성이 반도체 사업을 시작하기 전부터, 한국은 미국, 일본 칩의 조립과 패키징을 하는 주요 장소였다. 삼성전자가 성공한건 한국 정부와 미국 기업들의 지원 덕분이었다. 미국 기업들 입장에서는 DRAM 만들어봐야 일본한테 털리니까 삼성전자에 관련기술 던져주고 돈이라도 받는게 나았다. 일본 말고 다른 DRAM 공급원 있으면 좋기도 하고. 이게 1983년이다. UCSD의 Andrew Viterbi가 만든 알고리즘 CDMA는 이론상 훌륭하긴 했는데, 연산량이 아주 많았다. 그러다 반도체가 계속 발전중이니 이제 가능해질거다! 라고 생각한 Andrew Viterbi와 Irwin Jacobs가 퀄컴을 창업했다. 이렇게 CDMA를 통해, 주어진 BW 안에 더 많은 신호를 넣을 수 있게 됐다. 소련은 미국 반도체, 장비들을 계속 훔쳐갔지만 결국 따라잡지는 못했다. 소련의 문제는: 1. 정치적 간섭이 심했고, 2. 시장이 군수시장 뿐이었고, 3. 국제 공급망이 없어서 미국-일본-동아시아 같은 협력이 불가능했다. 반도체로 강화된 무기는 걸프전에서 볼 수 있었다. 당시 뉴욕타임즈 헤드라인: 강철을 이긴 실리콘 페이브웨이 폭탄: TI가 만든 유도탄 일본 기업들은 정부 지원을 계속 받아, 그냥 만들던거 계속 찍어냈다. 삼성전자, 마이크론 등이 DRAM 시장에 들어와도 그들은 그냥 무지성으로 생산량 더 늘려서 더 많이 찍어냈다. 소니는 다른 일본 회사들이랑 다르게, DRAM 말고 이미지센서에 투자했다. 그리고 아직까지 그걸로 먹고 산다. 도시바에서는 마스오카 후지오가 플래시메모리를 만들었는데, 도시바는 발견을 무시했고 결국 그걸 제품으로 개발해 시장에 내놓은 것은 인텔이었다. 일본 기업들은 DRAM으로 돈을 많이 벌어서 마이크로프로세서 시장을 무시했지만, 컴퓨터 시대가 오자 DRAM보다 마이크로프로세서가 훨씬 중요해졌다. 1990년에는 고르바초프가 실리콘밸리를 방문하고, 스탠포드에서 강연도 했다. 이렇게 냉전 패배 인정했다. 1993년부터 미국은 반도체를 다시 수출하기 시작헀고, 1998년에는 삼성전자가 DRAM 최대생산자 자리를 먹었다. 1980년대 말에 90%였던 일본의 시장 점유율은 1998년에는 20%가 됐다. 대만 입장에서는, 반도체 조립은 동아시아 국가들 모두 하니까 뭔가 더 돈 될만한 다른 산업을 찾아야 했다. 한국처럼 조립에서 생산으로 나아가지 못하면 중국한테 일 다 뺏길 상황이었다. 대만은 모리스 창을 불러서, 니 하고싶은거 다 하게 해줄 테니까 대만에 반도체 산업 한번 만들어보라고 했다. 모리스 창이 하고 싶었던건 반도체 제조 특화 기업이었다. TSMC 설립에 투자한건 대만 정부, 대만 자본가들, 필립스 정도였다. 그마저도 대만 자본가들은 대만 정부에 의해 강제참여 당한거였다. 실리콘밸리의 작은 팹리스 업체들은 항상 다른 회사 fab을 빌려야 했는데, 그러면서도 항상 기술 도둑맞지 않을까 불안했다. 그래서 그들에게 TSMC가 아주 좋아보였다. TSMC는 1987년에 세워졌는데, 화웨이도 런정페이가 1987년에 선전에 세웠다. 80년대 중국 지도자는 장쩌민이었는데, 상하이교통대 전기공학과 출신이라 그런지 전자기술을 중요시했다. DRAM시장을 계속 점유하려면 공정 선폭(technology node)의 연속성을 확보해야 하는데, 여기에 많은 돈이 든다. 삼성전자는 정부의 지원으로 이걸 확보했다. Technology node: 해당 공정에서 구현 가능한 최소 선폭 중국은 반도체 생산이 중요하다고 생각하긴 했는데, 반도체를 생산할 인프라는 없었다. 그러던 중 리처드 창이 2000년에 중국에 SMIC를 설립했고, TSMC를 따라하기 시작했다. 이런 식으로, TSMC의 경쟁자들이 많아지기 시작했다. SMIC, 싱가포르의 차터드반도체, 대만의 UMC, 대만의 뱅가드반도체, 한국의 삼성전자 등이 경쟁자였다. *중국 주석: 마오쩌둥-화궈펑-덩샤오핑-장쩌민-후진타오-시진핑 1990년대에는 리소그래피의 미래가 불투명한 시대였다. 당시에는 파장을 더 줄여서, DUV를 넘어 EUV를 써야 하는 시대가 왔다. 그런데, EUV 장비 개발은 돈이 정말 엄청나게 드는 일이었다. 당시 리소그래피 회사는 캐논, 니콘, ASML이 있었다. ASML은 필립스의 리소그래피 부서가 떨어져 나와 생긴 곳이다. ASML은 네덜란드 회사기 때문에, 미국 회사들은 일본의 캐논, 니콘보다는 ASML과 거래하는걸 더 선호했다. 그리고 필립스가 TSMC 초기 투자자였기 때문에, ASML은 TSMC라는 확실한 고객을 갖고 성장할 수 있엇다. 결국 캐논, 니콘은 EUV 장비 개발을 포기했고, ASML만 성공했다. CPU가 계산하는 방식을 설정하는 규칙 모음 = CPU architecture 인텔이 만든 아키텍처가 x86이었고, x86이 개인 컴퓨터 CPU의 표준이 되었다. X86이 최고의 아키텍처라서 시장을 먹었다기보다는, IBM이 만든 최초의 개인용 컴퓨터에서 x86 아키텍처를 썼기 때문이다. X86 기반 CPU를 안쓰는 컴퓨터 업체로는 애플이 있었지만, 2006년부터는 애플도 x86 기반 CPU를 쓰기로 했다. UC 버클리에서는 RISC라는 아키텍처를 만들었는데, 이 아키텍처가 x86보다 더 효율적이고 가볍다. 그래서 인텔도 x86 버리고 RISC로 옮길까 하다가, 전환 비용이 너무 비싸다고 판단해 그만뒀다. 그래서 지금도 컴퓨터들은 대부분 x86 기반이다. 인텔은 데이터센터 시장도 그들의 프로세서를 내세워 IBM, HP를 밀어내고 먹어버렸다. 현재 인텔 또는 AMD 프로세서 없이는 데이터센터가 있을 수 없다. 인텔이 버린 RISC는 1990년 애플이 세운 벤처회사 ARM이 써보기로 했다. ARM은 직접 칩을 설계하지는 않고, 아키텍처 사용권 라이선스만 팹리스 업체들에게 판다. 하지만 ARM은 인텔의 점유율을 뺏지는 못했다. 인텔 프로세서랑 마이크로소프트 운영체제랑 너무 협력이 강했기 때문이다. 이게 1990~2000년대 이야기다. 그러다가 휴대용 기기가 많이 나오기 시작하면서, 에너지 효율이 좋은 ARM 프로세서가 인기를 얻게 됐다. 닌텐도 게임기에도 ARM 프로세서가 들어간다. 인텔은 컴퓨터 시장에서 독점으로 돈 벌며 휴대기기 시장 무시하다가 결국 핸드폰 프로세서 시장을 놓쳐버렸다. 인텔은 쭉 PC용 칩, 서버용 칩만 만들었다. 애플이 아이폰 만들기 전에 인텔을 찾아가서 핸드폰이 컴퓨터처럼 동작할 수 있게 프로세서 만들어줄 수 있겠냐고 계약을 제시했었는데, 인텔이 계약을 받아들이지 않았다. 인텔도 나중에는 모바일 칩 제작하려 했지만, 별 성과는 없었다. Applied materials: 웨이퍼 위에 얇은 막 씌우는 장비 제조사 Lam Research: Etching 기술력이 최고 KLA: 웨이퍼, 마스크 위 나노미터 단위 오차 찾아내는 장비 제조사 Tokyo Electron도 장비 제조사다. 2010년대 초, 당시 최신 마이크로프로세서는 개당 10억개의 트랜지스터를 갖고 있었다. 이런 칩을 설계하려면 설계용 소프트웨어가 필요하고, 그런 소프트웨어를 만들 수 있는 곳은 Cadence, Synopsys, Mentor 3곳이었다. 모두 미국회사다. 2000년대 들어, 많이들 반도체 산업을 3개 영역으로 나누게 되었다. Logic: 스마트폰, 컴퓨터, 서버를 운영하는 프로세서 Memory: DRAM, 플래시메모리 등 Analog: 시각,음성신호를 디지털 데이터로 치환, 네트워크에 접속하고 통신할 수 있게 해주는 통신 칩, 장비 제어 등 여기서, 3번째 영역인 아날로그 영역은 무어의 법칙과 무관하다. 즉, 매년 성능이 exponential하게 증가하지 않는다. 요즘 Analog 칩들은 3/4가 180nm 이상 공정에서 생산된다. 180nm 공정은 1990년대 후반에 나온 공정인데도 말이다. 그래서 analog칩 분야의 경제 논리는 logic칩, 메모리칩 분야와 다르다. 무조건 트랜지스터 크기를 줄여야 하는 분야가 아닌 것이다. 그래서 analog칩 만들거면 트랜지스터 크기 줄이려고 미친듯이 경쟁할 필요가 없고, 따라서 비싼 팹을 쓸 필요도 없다. 그렇기에 이익률이 높은 분야다. 대신, 설계 잘하는게 그만큼 중요한 분야다. 지금 아날로그 칩 업체중 가장 큰 곳은 TI고, 그 밖에도 Onsemi, Skyworks, Analog Device같은 미국 회사들이 있다. 1990년대 말, 일본 DRAM업체들은 Elpida라는 이름으로 하나의 회사가 되었다. 일본 경제도 안좋았고, 마이크론, 삼성전자, 하이닉스에 맞서기 위해서였다. 하지만 Elpida는 2013년에 마이크론에게 인수되고 말았다. 이렇게 되어, 마이크론은 미국 뿐 아니라 일본, 대만, 싱가포르에도 팹을 보유하게 됐다. 결국, 이 세상 모든 DRAM은 동아시아에서 만들어진다. 삼성잔자는 낸드플래시 메모리의 35%를 만든다. 나머지를 일본의 Kioxia, 미국의 마이크론과 웨스턴디지털이 나눠갖는다. 마이크론과 웨스턴디지털도 생산설비가 일본, 싱가포르에 있어서, 결국 낸드플래시 메모리도 다 동아시아에서 만들어진다. 오늘날, 최신 팹을 갖추려면 200억달러 이상이 든다. 그래서 요즘은 다들 팹리스 회사를 만든다! 팹리스 창업은 수백만 달러면 된다. 엔비디아는 1993년에 만들어졌다. 엔비디아는 그래픽 연산을 위한 프로세서, GPU들을 만들었다. 그러다가 2006년 CUDA를 내놨다. CUDA를 쓰면 GPU를 그래픽이랑 상관 없는 분야에서도 쓸 수 있다. 즉, 시장이 넓어진다! 그래서 엔비디아가 CUDA를 열심히 관리한다. 병렬처리가 필요한 곳이면 어디서든 GPU를 쓸 수 있다. 퀄컴은 1985년에 세워졌다. Quality + Communication = Qualcomm 퀄컴은 CDMA가 성공한 후, 통신 칩 뿐 아니라 아예 AP(Application Processor)를 통째로 만들기 시작했다. CDMA는 연산이 많이 필요한데, 그걸 가능하게 하는 칩을 만든 것이다. FPGA(Field-Programmable Gate Array)하는 회사는 Altera, Xilinx가 있다. AMD도 원래 팹이 있었지만, 아부다비 정부에 제조 사업부를 매각했다. 그게 지금의 Global Foundries다. 2000년대 주안부터는 SiO2 두께가 원자 2개정도가 되어 tunneling이 심해졌다. 그리고 채널 폭도 너무 좁아져서, 전류가 새어나가는 일이 많아졌다. 그래서 FinFET이 나왔다. FinFET은 전기장을 위에서만 거는게 아니라 옆으로도 걸어서, 전자를 더 잘 제어할 수 있고 전류 누설도 막을 수 있다. 물론, 이런 나노미터 단위 3차원 구조는 엄청난 공정 기술이 필요하다. 2008년 금융 위기때, 제품이 안팔리니 반도체 업계도 힘들었다. TSMC는 이때, 모리스 창의 주도 하에 모바일 시장 내다보고 투자 엄청나게 헀다. 1세대 아이폰: 운영체제는 애플이 만든 iOS였지만, 칩 설계와 생산은 삼성전자에서 많이 했다. 그 외에도 인텔의 메모리 칩, Wolfson의 오디오 프로세서, 독일의 Infinion의 무선 네트워크 접속용 모뎀 칩, CSR의 블루투스 칩, Skyworks의 신호 증폭기 등이 들어갔다. 아이폰 출시 1년 후, 애플은 PA semi라는 에너지 효율 좋은 프로세서를 설계하는 스타트업을 인수하고, 반도체 설계자들을 고용했다. 2년 후, 애플은 A4라는 자체 AP를 만들었다고 발표했다. 아이폰4에 이 A4가 들어갔는데, 아마 이게 짐 켈러 업적일거다. 애플은 메인 프로세서 뿐 아니라 에어팟같은 주변기기의 보조 칩도 스스로 만든다. 스마트폰 AP는 설계하는 데에 비용이 많이 든다 그래서 중저가 스마트폰 만드는 회사들은 그냥 퀄컴에서 칩 사온다. 아이폰에 의해 노키아, 블랙베리같은 회사들은 다 죽어버렸다. Foxconn, Wistron같은 대만 기업들은 중국에서 애플 제품 조립 설비를 운영한다. EUV 애기가 갑자기 다시 나오는데, 옛날에는 리소그래피에 그냥 가시광선을 이용했다. 근데 가시광선이면 파장이 수백나노미터 정도라서, 회로가 작아지자 한계에 봉착했다. 그래서, 가시광선보다 파장이 짧은 248nm, 193nm 자외선들을 리소그래피에 쓰기 시작했다. 이렇게 하면 가시광선보다 더 정교한 그림을 그릴 수 있었지만, 여기에도 한계가 있었다. 그래서, 회사들은 파장 13.5nm EUV(극자외선)을 연구하기 시작했다. DUV(심자외선)을 쓸 때는 자외선을 물에 투과시키거나 여러 겹의 마스크에 통과시킴으로써 193nm DUV로 193nm보다 좁은 폭의 패턴을 그렸다. 이 짓거리가 2010년대 중반 3nm FinFET 공정까지 이어졌다! 하지만 그 이상은 이젠 너무 어려웠다. TSMC, 삼성전자, 인텔, 글로벌파운드리즈 모두 EUV 도입을 원했다. 글로벌파운드리즈는 2010년 싱가포르의 파운드리업체인 차터드반도체를 인수했고, 2014년에는 IBM 반도체사업부를 인수했다. IBM이 소프트웨어에만 집중하기로 하면서 팔아버렸거든. 하지만 EUV개발에는 돈이 너무 많이 들어서, 글로벌파운드리즈는 결국 EUV 경쟁을 포기했다. 이제 삼성전자, TSMC, 인텔밖에 남지 않았다. 2010년대 실리콘밸리에서, 반도체설계와 제조를 모두 하는 회사는 인텔 뿐이었다. 하지만 둘다 어중간했다. 2010년대 들어, 데이터센터용 프로세서와 서버용 프로세서가 많이 필요해지면서 인텔 칩이 많이 팔렸다. 아마존 웹서비스, 마이크로소프트 azure, 구글 클라우드 등 근데, 그 2010년대쯤부터 연산력에 대한 수요가 변하기 시작했다. AI 때문이다. CPU는 서로 다른 유형의 계산을 수행할 수 있기 때문에 범용성을 가지지만, 그 모든 계산을 순차적으로, 한번에 하나씩 해야 한다. 하지만 AI는 매번 다른 데이터를 받아서 매번 같은 연산을 하는 것으로 학습된다. 그래서 범용성같은거 필요 없고, 그냥 노가다 잘하는 칩이 있으면 된다. GPU는 병렬로 연산을 진행하기 때문에 많은 계산을 동시에 처리할 수 있다. 그래서 AI에 GPU가 많이 쓰이게 되었고, 이게 2010년대 초다. 엔비디아는 인공지능에 회사의 미래를 걸고, CUDA를 개선하기 위해 엄청나게 노력했다. 그리고 인공지능 뿐 아니라 데이터센터에서도 GPU를 많이 필요로 하게 되어, 엔비디아가 떡상했다. 그렇다고 엔비디아 미래가 무조건 밝은건 아니다. 클라우드 회사들(아마존, 마이크로소프트, 구글, 텐센트, 알리바바)이 그들 각자의 수요에 맞는 칩을 설계하기 시작했기 때문이다. 예를 들어, 구글은 구글의 Tensorflow 라이브러리에 최적화된 TPU(Tensor Processing Unit)를 구글 데이터센터에 쓰고 있다. 하여간, GPU가 훨씬 중요해졌기 때문에 인텔의 데이터센터용 프로세서도 이제 많이 안팔리게 됐다. 결국, 인텔은 반도체 설계한것도 잘 안팔리고, 파운드리는 TSMC, 삼성전자랑 기술 격차가 말도 안되는 수준이다. 그냥 회사가 좀 망했다. 2020년 기준, 지구상의 EUV장비 중 절반은 TSMC에 있다. 2020년대, 최첨단 프로세서를 제조할 수 있는 회사는 TSMC와 삼성전자 뿐이다. 근데 둘다 동아시아에 있고, 중국이랑 가까워서 미국이 걱정이 많다. 중국은 구글, 페이스북을 차단하고 바이두, 텐센트로 그 자리를 대체하고 있다. 애플, 마이크로소프트는 중국 검열에 협조하겠다고 한 뒤 중국 시장에 들어갈 수 있었다. 2000년대, 2010년대에 중국이 가장 많은 돈을 쓴 수입제품은 석유가 아니라 반도체였다. 시진핑의 ‘중국제조2025’라는 계획이 있다. 2015년 85%였던 반도체 수입 비중을 2025년에는 30%까지 줄이자는거다. 근데 첨단 팹의 가격은 2014년에 이미 100억달러정도 했다. 그래서 달성하려면 돈이 엄청 들거다. 2017년, 중국은 2600억달러어치 반도체를 수입했다. 이건 사우디아라비아의 석유 수출이나 독일의 자동차 수출보다 훨씬 많은 금액이다. 2017년 기준으로, 집적회로는 한국 수출 총액의 15%, 싱가포르 수출 총액의 17%, 말레이시아 수출 총액의 19%, 필리핀 수출 총액의 21%, 대만 수출 총액의 36%를 차지한다. 중국은 이렇게나 큰 시장을 내수화 하려고 하는거다. 이 전자제푸 공금망은 지난 50년간 아시아 경제 성장을 떠받쳐왔다. IBM은 미국 정부에 소프트웨어를 많이 팔아왔는데, 에드워드 스노든이란 사람이 모스크바로 망명하며 미국의 첩보작전 관련 문서들을 다 공개해버렸다. 미국 정부의 도청 정황이 드러난 문서들이었는데 그래서 중국 회사들이 IBM 제품들을 구매하지 않게 됐다. 그래서 IBM은 중국 정부를 찾아가서 반도체 기술좀 줄테니까 우리 제품좀 사달라고 했다. 이게 IBM만 그런게 아니고, 퀄컴, AMD도 기술 협약, 기술 이전을 체결하면서라도 중국 시장에 들어가려고 했다. 이런 식으로, 중국은 반도체 제조 기술을 쌓아가고 있다. 칭화유니그룹은 칭화대가 설립한 회사로, 표방하는건 대학의 연구를 사업으로 전환하는 것이지만, 실제로는 중국 정부가 시키는 대로 부동산, 반도체에 돈 뿌리는 회사다. 얘네는 해외 반도체 회사들 인수하려고 많은 노력을 했다. 이병철이 건어물 회사였던 삼성을 키운 방법은: 1. 정부와 좋은 관게를 유지하려고 노력했다. 2. 서양, 일본의 제품 몇개를 골라 그것을 같은 품질에 낮은 가격으로 만드는걸 목표로 했다. 3. 세계화에 적극적이었다. 중국에서는 화웨이가 텐센트, 알리바바와 달리 초기부터 외국과의 경쟁을 받아들였다. 창업자가 런정페이인데, 런정페이도 이병철처럼 가성비 좋은 버전 만들어서 파는데에 주력했다. 런정페이는 충칭대 출신이고, 1987년에 화웨이 창업했다. 선전은 외국 투자가 장려되는 곳이라, 런정페이는 선전으로 가서 전화교환기 사업을 시작했다. 그리고 이 기술은 이후 데이터 송수신에 게속 응용됐으며, 현재 무선기지국 분야 3대 사업자는 핀란드의 노키아, 스웨덴의 에릭슨, 중국의 화웨이다. 화웨이는 매년 150억달러 정도를 연구개발에 쓴다. 이 정도를 연구개발에 쓰는 회사는 구글, 아마존, 폭스바겐 정도다. 이게 가능한 이유는 중국 정부 지원을 받아서도 있다. 화웨이는 인프라 제공을 넘어 스마트폰 시장까지 들어갔다. 그리고 자사 스마트폰용 반도체 개발도 한다! 2010년대 말, 화웨이의 HiSilicon 사업부는 TSMC의 두번째로 큰 고객이 됐다. 가장 큰 고객은 애플이다. 어쨌든 화웨이는 무려 스마트폰 프로세서까지 설계하는 회사가 된거다. 이건 엄청난 기술력이다. 2G폰은 사진을 주고받을 수 있었고, 3G폰은 웹사이트를 열 수 있었으며, 4G폰은 비디오 스트리밍이 가능했다. 주파수, 그니까 spectrum은 Silicon보다 훨씬 비싸다. 그래서 퀄컴은 송수신되는 데이터를 최적화할 방법을 찾아내고, 아날로그디바이스같은 회사들은 더 정교하게, 더 효율적으로 무선 신호를 주고받을 수 있ㄴ느 RF transceiver들을 만들었다. Beamforming: 기지국이 전화기의 위치를 파악한 후, 그쪽으로 전파를 보낸다. 테슬라도 반도체 설계 분야의 주요 회사중 하나다. 자체 설계한 반도체를 많이 쓴다. AI에 중요한건 데이터, 알고리즘, 연산력이다. 이 중 중국이 가지지 못한건 연산력이다. 연산력에 쓰이는 하드웨어 다 미국이 설계하고 대만이 만들기 때문이다. 아날로그 칩, RF칩은 비싼 fab을 쓸 필요는 없다. ZTE: 중국 국영 통신 인프라 업체. 화웨이는 민간 업체다. 트럼프 취임때쯤, 중국은 미국의 최대 고객이자 최대 경쟁자였다. DRAM 시장은 규모의 경제를 필요로 한다. 그래서 삼성전자, 하이닉스, 마이크론같은 대기업들밖에 안남았다. 현재 반도체 장비 제작사들은 미국(Applied Materials, Lam Research, KLA), 일본, 네덜란드(ASML)이 전부다. 그래서 얘네한테 무역제재당하면 반도체 못만든다. 푸젠진화반도체(JHICC)가 마이크론 DRAM 기밀 훔쳐가자, 미국이 일본까지 끌어들여 함께 무역제재를 걸어버렸다. 결국 JHICC는 DRAM 생산을 못하게 됐다. 미국은 동맹국들에게 5G네트워크에서 화웨이를 손절하라고 말햇다. 호주, 폴란드, 프랑스 등은 미국 말대로 완전 손절했는데, 독일은 자동차 시장때문에 눈치를 봤고 영국은 아예 손절을 안했다. 2020년, 미국은 화웨이를 패기로 했다. 일단 미국산 칩을 화웨이에 수출 못하게 헀다. 하지만 화웨이는 칩 설계 역량이 있엇기 때문에, TSMC만 안막히면 큰 문제 없었다. 그래서 2020년 5월에는 모든 미국산 반도체 관련 제품 수출을 막았다. 미국 장비가 없으면 TSMC라고 해도 칩을 만들어줄 수가 없다! 이렇게 되자 영국도 화웨이를 손절했다. 그렇다고 중국 회사들이 다 망한것은 아니다. 텐센트, 알리바바는 살아있고, SMIC도 첨당 장비는 못사도 공장 계속 굴리고 있고, 화웨이도 첨단 반도체만 못사는거라 4G 네트워크 사업은 게속 하고 있다. 우한에 YMTC라는 낸드플래시 메모리업체가 있는데, 여기는 코로나 락다운때도 안닫혔다. 정부에서 아예 특별 열차편을 만들어서 회사 오갈 수 있게 해줬다고 한다. 요즘 ASML에서 만들려는 것은 high-NA EUV다. NA = Numerical Aperture. 2020년 중반 출시 예정이고, 대당 3억달러쯤 할 예정이다. RISC-V는 x86이나 ARM과 달리 open source architecture다. RISC-V 재단은 지정학적 중립성을 위해 미국에서 스위스로 위치를 옮겼다. 알리바바 등 회사들은 RISC-V에 기바한 프로세서들을 설계하고 있다. SMIC 전략: 스마트폰, 데이터센터는 첨단 칩이 필요하지만, 자동차는 그렇지 않다. 그래서, 구세대칩을 찍어내서 첨단기술이 필요하지 않은 전기차에 많이 들어가게 한다. 중국은 SiC, GaN(질화갈륨) 등 반도체 물질에도 투자한다. 전기차 출력 관리용 반도체에 많이 쓰일 것으로 예상돼서. 중국은 전기차 많이 하는 나라다. 2020년, 코로나 때문에 자동차 회사들이 반도체 주문을 많이 줄였다. 그러는 동안 사람들은 컴퓨터를 사서 PC, 데이터센터용 칩이 많이 필렸다. 근데 자동차 수요가 생각보다 빨리 회복돼서, 자동차 회사들이 뒤늦게 반도체를 주문하긴 했지만 주문이 밀려서 고생했다.]]></summary></entry><entry><title type="html">게임의 역사</title><link href="http://localhost:4000/history/2023/10/04/History-%EA%B2%8C%EC%9E%84.html" rel="alternate" type="text/html" title="게임의 역사" /><published>2023-10-04T19:31:29+09:00</published><updated>2023-10-04T19:31:29+09:00</updated><id>http://localhost:4000/history/2023/10/04/History%20-%20%EA%B2%8C%EC%9E%84</id><content type="html" xml:base="http://localhost:4000/history/2023/10/04/History-%EA%B2%8C%EC%9E%84.html"><![CDATA[<p>아타리 쇼크 등</p>]]></content><author><name></name></author><category term="History" /><summary type="html"><![CDATA[아타리 쇼크 등]]></summary></entry></feed>