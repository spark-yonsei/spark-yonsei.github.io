---
layout: post
title:  "Digital - Firmware"
date:   2023-10-04 19:31:29 +0900
categories: Design
order: 5
---


C, 어셈블리어 등의 언어로 원하는 동작을 구현한 텍스트 파일(코드 적힌 파일)을 만든다. 이게 소스 파일이다.

그리고 소스 파일을 컴파일해서 얻어지는 기계어 명령어 집합을 펌웨어라고 한다?

이 펌웨어를 메모리에 저장해두면, cpu는 그 메모리에서 기계어 명령을 읽고 해석해서 동작을 실행한다.

임베디드 시스템에서 자주 사용되는 직렬 통신:
UART, I2C, SPI

CPU에는 cu, alu, register가 있다
CU: control unit, 제어 유닛
Cu는 주변 유닛들을 제어해 기계어를 읽어들이고 그걸 시행한다

Alu는 계산을 하는 곳이다

메모리에서 cpu까지 정보를 읽어올때, 연결하는 통신 신호선을 bus라고 부른다. 근데 r,c의 영향으로 신호 전달속도에 한계가 있으니, cpu 안에 레지스터를 만들어놓고 여기다가 정보를 저장한다

Cpu 안 레지스터는 특수 용도 레지스터랑 일반 목적 레지스터가 있다.
특수 용도 레지스터는 특정 정보를 저장하게 되고,
일반 목적 레지스터는 그냥 연산 결과, 함수 내 인수 변수 등을 임시 저장하는데에 쓰인다.

어셈블리어로 펌웨어 프로그래밍 해보면, 대부분 동작은 일반 레지스터를 이용해 데이터를 저장하고 사용하게 된다.

Cpu 동작:
명령어 읽어오기(fetch)
명령어 분석(decode)
명령어 실행(execute)

이 3단계를 거치며 동작한다
각 clock마다 한 단계를 거친다

Pipeline 동작:
Decode하는 동안 다음 명령어 fetch해오는 방식으로 시간 줄이는 방식
병렬처리 동작이라고도 한다

RISC CPU
명령어 수 적음
명령어 크기 고정
1개 명령어 처리속도 빠름
프로그래밍 코드 복잡


CISC CPU
명령어 수 많음
명령어 크기 명령어마다 다름
1개 명령어 처리속도 명령어마다 다름
프로그래밍코드 단순

명령어 수가 많으면, 하나의 명령어만 적어서 구현할 수 있는 동작들이 많다. 그래서 Cisc는 복합 명령을 하나의 명령으로 많이 갖고 있다

Risc는 명령어 수를 최소화하고, 명령어 크기를 고정한 상태에서 명령어들의 동작을 최적화해 효율을 높인다

일반적으로 pc계열은 cisc, arm계열은 risc를 쓴다

왜 cisc는 명령어마다 길이가 다르냐?
여러 명령들을 묶어서 만든 복합 명령들이 많아서 그렇다

Risc는 명령 크기를 16비트, 32비트 이런식으로 고정해둔다

처리 속도:
Risc는 명령어마다 1클럭 또는 2클럭 안에 끝내게 되어 있다
Cisc는 명령어마다 다르다. 복합 명령들이 읶으니까

프로그래밍 편의:
Cisc에서 모든 명령을 다 숙지하고 있다면, 딱 적합한 명령어를 써서 프로그래밍을 단순하게 할 수 있다

근데 그렇게 되는거 자체거 힘든 일이라, 꼭 cisc가 risc보다 프로그래밍이 쉽다고는 할 수 없다

C언어 컴파일러로 컴파일하면 어셈블리어, 이걸 어셈블러에 넣으면 기계어(binary file)이 나온다

보통 c언어로 코딩해놓고, 사용할 cpu에 맞는 컴파일러를 가져와서 어셈블리어 기계어로 바꾼다.
같은 c코드도 컴파일러에 따라 출력되는 어셈블리어, 기계어가 다르다

그래서 c언어로 펌웨어를 만들고, 이걸 컴파일러에 넣어 이진 파일을 만들고, 이 파일을 메모리에 기록해두면 cpu가 이걸 읽고 실행해 원하는 동작을 시행한다


Regulator: 일정한 전압을 만들어주는 소자

Linear regulator, switching regulator
장단점 정리해두기
Ldo는 linear regulator
Buck, boost converter는 switching regulator


오실레이터에서 만들어진 주기적인 진동 파형을 슈미트 트리거로 정확한 구형파형으로 만들어 clock을 만든다
이걸 cpu에 넣어준다


PLL:
보통 오실레이터에서 출력되는 클락은 8MHz, 12MHz, 16MHz라서 실제 시스템 동작속도보다 느리다
그래서 PLL은 주파수를 올리고 안정적으로 만든다
여기서 나온 클락신호가 cpu에 전달된다

Mcu 내의 다른 로직들은 보통 cpu보다 구동 주파수가 낮다. 그래서 prescaler(전치분주기)로 주파수를 내려준다

메모리 구분 표 있는데 이거 참고해서 정리

